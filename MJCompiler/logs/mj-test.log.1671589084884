INFO  03:15:22,921 - Compiling source file: D:\GitHub repos\PP1-Projekat\MJCompiler\test\program.mj
INFO  03:15:22,925 - #2 program
INFO  03:15:22,925 - #20 p
INFO  03:15:22,925 - #7 const
INFO  03:15:22,925 - #20 int
INFO  03:15:22,925 - #20 size
INFO  03:15:22,925 - #37 =
INFO  03:15:22,925 - #21 10
INFO  03:15:22,925 - #40 ;
INFO  03:15:22,925 - #4 class
INFO  03:15:22,925 - #20 Table
INFO  03:15:22,925 - #48 {
INFO  03:15:22,925 - #20 int
INFO  03:15:22,926 - #20 pos
INFO  03:15:22,926 - #46 [
INFO  03:15:22,926 - #47 ]
INFO  03:15:22,926 - #42 ,
INFO  03:15:22,926 - #20 neg
INFO  03:15:22,926 - #46 [
INFO  03:15:22,926 - #47 ]
INFO  03:15:22,926 - #42 ,
INFO  03:15:22,926 - #20 factor
INFO  03:15:22,926 - #40 ;
INFO  03:15:22,926 - #48 {
INFO  03:15:22,927 - #20 Table
INFO  03:15:22,927 - #44 (
INFO  03:15:22,927 - #20 int
INFO  03:15:22,927 - #20 factor
INFO  03:15:22,927 - #45 )
INFO  03:15:22,927 - #48 {
INFO  03:15:22,927 - #18 this
INFO  03:15:22,927 - #43 .
INFO  03:15:22,927 - #20 factor
INFO  03:15:22,927 - #37 =
INFO  03:15:22,927 - #20 factor
INFO  03:15:22,927 - #40 ;
INFO  03:15:22,927 - #49 }
INFO  03:15:22,927 - #15 void
INFO  03:15:22,927 - #20 putp
INFO  03:15:22,927 - #44 (
INFO  03:15:22,927 - #20 int
INFO  03:15:22,927 - #20 a
INFO  03:15:22,927 - #42 ,
INFO  03:15:22,927 - #20 int
INFO  03:15:22,928 - #20 idx
INFO  03:15:22,928 - #45 )
INFO  03:15:22,928 - #48 {
INFO  03:15:22,928 - #18 this
INFO  03:15:22,928 - #43 .
INFO  03:15:22,928 - #20 pos
INFO  03:15:22,928 - #46 [
INFO  03:15:22,928 - #20 idx
INFO  03:15:22,928 - #47 ]
INFO  03:15:22,928 - #37 =
INFO  03:15:22,928 - #20 a
INFO  03:15:22,928 - #40 ;
INFO  03:15:22,928 - #49 }
INFO  03:15:22,928 - #15 void
INFO  03:15:22,928 - #20 putn
INFO  03:15:22,928 - #44 (
INFO  03:15:22,928 - #20 int
INFO  03:15:22,928 - #20 a
INFO  03:15:22,928 - #42 ,
INFO  03:15:22,928 - #20 int
INFO  03:15:22,929 - #20 idx
INFO  03:15:22,929 - #45 )
INFO  03:15:22,929 - #48 {
INFO  03:15:22,929 - #18 this
INFO  03:15:22,929 - #43 .
INFO  03:15:22,929 - #20 neg
INFO  03:15:22,929 - #46 [
INFO  03:15:22,929 - #20 idx
INFO  03:15:22,929 - #47 ]
INFO  03:15:22,929 - #37 =
INFO  03:15:22,929 - #20 a
INFO  03:15:22,929 - #40 ;
INFO  03:15:22,929 - #49 }
INFO  03:15:22,929 - #20 int
INFO  03:15:22,929 - #20 getp
INFO  03:15:22,929 - #44 (
INFO  03:15:22,929 - #20 int
INFO  03:15:22,929 - #20 idx
INFO  03:15:22,929 - #45 )
INFO  03:15:22,930 - #48 {
INFO  03:15:22,930 - #14 return
INFO  03:15:22,930 - #20 pos
INFO  03:15:22,930 - #46 [
INFO  03:15:22,930 - #20 idx
INFO  03:15:22,930 - #47 ]
INFO  03:15:22,930 - #40 ;
INFO  03:15:22,930 - #49 }
INFO  03:15:22,930 - #20 int
INFO  03:15:22,930 - #20 getn
INFO  03:15:22,930 - #44 (
INFO  03:15:22,930 - #20 int
INFO  03:15:22,930 - #20 idx
INFO  03:15:22,930 - #45 )
INFO  03:15:22,930 - #48 {
INFO  03:15:22,930 - #14 return
INFO  03:15:22,930 - #20 neg
INFO  03:15:22,930 - #46 [
INFO  03:15:22,930 - #20 idx
INFO  03:15:22,930 - #47 ]
INFO  03:15:22,930 - #40 ;
INFO  03:15:22,930 - #49 }
INFO  03:15:22,931 - #49 }
INFO  03:15:22,931 - #49 }
INFO  03:15:22,931 - #20 Table
INFO  03:15:22,931 - #20 val
INFO  03:15:22,931 - #40 ;
INFO  03:15:22,931 - #20 Int
INFO  03:15:22,931 - #20 rows
INFO  03:15:22,931 - #42 ,
INFO  03:15:22,931 - #20 columns
INFO  03:15:22,931 - #40 ;
INFO  03:15:22,931 - #48 {
INFO  03:15:22,931 - #15 void
INFO  03:15:22,931 - #20 f
INFO  03:15:22,931 - #44 (
INFO  03:15:22,931 - #20 char
INFO  03:15:22,931 - #20 ch
INFO  03:15:22,931 - #42 ,
INFO  03:15:22,932 - #20 int
INFO  03:15:22,932 - #20 a
INFO  03:15:22,932 - #42 ,
INFO  03:15:22,932 - #20 int
INFO  03:15:22,932 - #20 arg
INFO  03:15:22,932 - #45 )
INFO  03:15:22,932 - #20 int
INFO  03:15:22,932 - #20 x
INFO  03:15:22,932 - #40 ;
INFO  03:15:22,932 - #48 {
INFO  03:15:22,932 - #20 x
INFO  03:15:22,932 - #37 =
INFO  03:15:22,932 - #20 arg
INFO  03:15:22,932 - #40 ;
INFO  03:15:22,932 - #49 }
INFO  03:15:22,932 - #15 void
INFO  03:15:22,933 - #20 main
INFO  03:15:22,933 - #44 (
INFO  03:15:22,933 - #45 )
INFO  03:15:22,933 - #20 int
INFO  03:15:22,933 - #20 x
INFO  03:15:22,933 - #42 ,
INFO  03:15:22,933 - #20 i
INFO  03:15:22,933 - #40 ;
INFO  03:15:22,933 - #20 char
INFO  03:15:22,933 - #20 c
INFO  03:15:22,933 - #42 ,
INFO  03:15:22,933 - #20 int
INFO  03:15:22,933 - #20 arr
INFO  03:15:22,933 - #46 [
INFO  03:15:22,933 - #47 ]
INFO  03:15:22,933 - #40 ;
INFO  03:15:22,933 - #48 {
INFO  03:15:22,933 - #20 val
INFO  03:15:22,933 - #37 =
INFO  03:15:22,933 - #11 new
INFO  03:15:22,933 - #20 Table
INFO  03:15:22,933 - #44 (
INFO  03:15:22,934 - #21 2
INFO  03:15:22,934 - #45 )
INFO  03:15:22,934 - #40 ;
INFO  03:15:22,934 - #20 arr
INFO  03:15:22,934 - #37 =
INFO  03:15:22,934 - #11 new
INFO  03:15:22,934 - #20 int
INFO  03:15:22,934 - #46 [
INFO  03:15:22,934 - #21 3
INFO  03:15:22,934 - #47 ]
INFO  03:15:22,934 - #40 ;
INFO  03:15:22,934 - #20 i
INFO  03:15:22,934 - #37 =
INFO  03:15:22,934 - #21 0
INFO  03:15:22,934 - #40 ;
INFO  03:15:22,934 - #10 while
INFO  03:15:22,934 - #44 (
INFO  03:15:22,934 - #20 i
INFO  03:15:22,934 - #33 <
INFO  03:15:22,934 - #21 3
INFO  03:15:22,935 - #45 )
INFO  03:15:22,935 - #48 {
INFO  03:15:22,935 - #20 arr
INFO  03:15:22,935 - #46 [
INFO  03:15:22,935 - #20 i
INFO  03:15:22,935 - #47 ]
INFO  03:15:22,935 - #37 =
INFO  03:15:22,935 - #20 i
INFO  03:15:22,935 - #40 ;
INFO  03:15:22,935 - #20 i
INFO  03:15:22,935 - #38 ++
INFO  03:15:22,935 - #40 ;
INFO  03:15:22,935 - #49 }
INFO  03:15:22,935 - #20 arr
INFO  03:15:22,935 - #43 .
INFO  03:15:22,935 - #19 foreach
INFO  03:15:22,935 - #44 (
INFO  03:15:22,935 - #20 x
INFO  03:15:22,935 - #50 =>
INFO  03:15:22,935 - #12 print
INFO  03:15:22,935 - #44 (
INFO  03:15:22,936 - #20 x
INFO  03:15:22,936 - #45 )
INFO  03:15:22,936 - #40 ;
INFO  03:15:22,936 - #45 )
INFO  03:15:22,936 - #40 ;
INFO  03:15:22,936 - #20 val
INFO  03:15:22,936 - #43 .
INFO  03:15:22,936 - #20 pos
INFO  03:15:22,936 - #37 =
INFO  03:15:22,936 - #11 new
INFO  03:15:22,936 - #20 int
INFO  03:15:22,936 - #46 [
INFO  03:15:22,936 - #20 size
INFO  03:15:22,936 - #47 ]
INFO  03:15:22,936 - #40 ;
INFO  03:15:22,936 - #20 val
INFO  03:15:22,936 - #43 .
INFO  03:15:22,936 - #20 neg
INFO  03:15:22,936 - #37 =
INFO  03:15:22,936 - #11 new
INFO  03:15:22,936 - #20 int
INFO  03:15:22,936 - #46 [
INFO  03:15:22,936 - #20 size
INFO  03:15:22,937 - #47 ]
INFO  03:15:22,937 - #40 ;
INFO  03:15:22,937 - #13 read
INFO  03:15:22,937 - #44 (
INFO  03:15:22,937 - #20 x
INFO  03:15:22,937 - #45 )
INFO  03:15:22,937 - #40 ;
INFO  03:15:22,937 - #46 [
INFO  03:15:22,937 - #20 i
INFO  03:15:22,937 - #42 ,
INFO  03:15:22,937 - #42 ,
INFO  03:15:22,937 - #20 x
INFO  03:15:22,937 - #47 ]
INFO  03:15:22,937 - #37 =
INFO  03:15:22,937 - #20 arr
INFO  03:15:22,937 - #40 ;
INFO  03:15:22,937 - #10 while
INFO  03:15:22,937 - #44 (
INFO  03:15:22,937 - #20 i
INFO  03:15:22,937 - #33 <
INFO  03:15:22,937 - #20 size
INFO  03:15:22,937 - #45 )
INFO  03:15:22,937 - #48 {
INFO  03:15:22,937 - #20 val
INFO  03:15:22,938 - #43 .
INFO  03:15:22,938 - #20 putp
INFO  03:15:22,938 - #44 (
INFO  03:15:22,938 - #21 0
INFO  03:15:22,938 - #42 ,
INFO  03:15:22,938 - #20 i
INFO  03:15:22,938 - #45 )
INFO  03:15:22,938 - #40 ;
INFO  03:15:22,938 - #20 val
INFO  03:15:22,938 - #43 .
INFO  03:15:22,938 - #20 putn
INFO  03:15:22,938 - #44 (
INFO  03:15:22,938 - #21 0
INFO  03:15:22,938 - #42 ,
INFO  03:15:22,938 - #20 i
INFO  03:15:22,938 - #45 )
INFO  03:15:22,938 - #40 ;
INFO  03:15:22,938 - #20 i
INFO  03:15:22,938 - #38 ++
INFO  03:15:22,939 - #40 ;
INFO  03:15:22,939 - #49 }
INFO  03:15:22,939 - #20 f
INFO  03:15:22,939 - #44 (
INFO  03:15:22,939 - #20 c
INFO  03:15:22,939 - #42 ,
INFO  03:15:22,939 - #20 x
INFO  03:15:22,939 - #42 ,
INFO  03:15:22,939 - #20 i
INFO  03:15:22,939 - #45 )
INFO  03:15:22,939 - #40 ;
INFO  03:15:22,939 - #13 read
INFO  03:15:22,939 - #44 (
INFO  03:15:22,939 - #20 rows
INFO  03:15:22,939 - #45 )
INFO  03:15:22,939 - #40 ;
INFO  03:15:22,939 - #20 x
INFO  03:15:22,939 - #37 =
INFO  03:15:22,939 - #20 rows
INFO  03:15:22,939 - #40 ;
INFO  03:15:22,939 - #10 while
INFO  03:15:22,939 - #44 (
INFO  03:15:22,940 - #23 true
INFO  03:15:22,940 - #45 )
INFO  03:15:22,940 - #48 {
INFO  03:15:22,940 - #8 if
INFO  03:15:22,940 - #44 (
INFO  03:15:22,940 - #20 x
INFO  03:15:22,940 - #34 <=
INFO  03:15:22,940 - #21 0
INFO  03:15:22,940 - #45 )
INFO  03:15:22,940 - #3 break
INFO  03:15:22,940 - #40 ;
INFO  03:15:22,940 - #8 if
INFO  03:15:22,940 - #44 (
INFO  03:15:22,940 - #21 0
INFO  03:15:22,940 - #34 <=
INFO  03:15:22,940 - #20 x
INFO  03:15:22,940 - #35 &&
INFO  03:15:22,940 - #20 x
INFO  03:15:22,940 - #33 <
INFO  03:15:22,940 - #20 size
INFO  03:15:22,940 - #45 )
INFO  03:15:22,940 - #48 {
INFO  03:15:22,940 - #20 val
INFO  03:15:22,940 - #43 .
INFO  03:15:22,940 - #20 putp
INFO  03:15:22,941 - #44 (
INFO  03:15:22,941 - #20 val
INFO  03:15:22,941 - #43 .
INFO  03:15:22,941 - #20 getp
INFO  03:15:22,941 - #44 (
INFO  03:15:22,941 - #20 x
INFO  03:15:22,941 - #45 )
INFO  03:15:22,941 - #24 +
INFO  03:15:22,941 - #21 1
INFO  03:15:22,941 - #45 )
INFO  03:15:22,941 - #40 ;
INFO  03:15:22,941 - #49 }
INFO  03:15:22,941 - #6 else
INFO  03:15:22,941 - #8 if
INFO  03:15:22,941 - #44 (
INFO  03:15:22,941 - #25 -
INFO  03:15:22,941 - #20 size
INFO  03:15:22,941 - #33 <
INFO  03:15:22,941 - #20 x
INFO  03:15:22,941 - #35 &&
INFO  03:15:22,941 - #20 x
INFO  03:15:22,941 - #33 <
INFO  03:15:22,941 - #21 0
INFO  03:15:22,941 - #45 )
INFO  03:15:22,941 - #48 {
INFO  03:15:22,941 - #20 val
INFO  03:15:22,941 - #43 .
INFO  03:15:22,941 - #20 putn
INFO  03:15:22,942 - #44 (
INFO  03:15:22,942 - #20 val
INFO  03:15:22,942 - #43 .
INFO  03:15:22,942 - #20 getn
INFO  03:15:22,942 - #44 (
INFO  03:15:22,942 - #25 -
INFO  03:15:22,942 - #20 x
INFO  03:15:22,942 - #45 )
INFO  03:15:22,942 - #24 +
INFO  03:15:22,942 - #21 1
INFO  03:15:22,942 - #45 )
INFO  03:15:22,942 - #40 ;
INFO  03:15:22,942 - #49 }
INFO  03:15:22,942 - #13 read
INFO  03:15:22,942 - #44 (
INFO  03:15:22,942 - #20 x
INFO  03:15:22,942 - #45 )
INFO  03:15:22,942 - #40 ;
INFO  03:15:22,942 - #49 }
INFO  03:15:22,942 - #49 }
INFO  03:15:22,942 - #49 }
