INFO  16:11:24,365 - Compiling source file: D:\GitHub repos\PP1-Projekat\MJCompiler\test\program.mj
INFO  16:11:24,397 - #2 program
INFO  16:11:24,397 - #17 p
INFO  16:11:24,398 - #6 const
INFO  16:11:24,398 - #17 int
INFO  16:11:24,398 - #17 size
INFO  16:11:24,398 - #31 =
INFO  16:11:24,398 - #47 10
INFO  16:11:24,398 - #34 ;
INFO  16:11:24,399 - #6 const
INFO  16:11:24,399 - #17 int
INFO  16:11:24,399 - #17 size3
INFO  16:11:24,399 - #35 ,
ERROR 16:11:24,399 - 
Sintaksna greska na liniji 4
INFO  16:11:24,399 - #17 int
INFO  16:11:24,400 - #17 size2
INFO  16:11:24,400 - #31 =
INFO  16:11:24,400 - #47 12
INFO  16:11:24,400 - #34 ;
INFO  16:11:24,400 - #17 int
INFO  16:11:24,400 - #17 size2
INFO  16:11:24,400 - #35 ,
INFO  16:11:24,401 - #17 ass
INFO  16:11:24,401 - #34 ;
INFO  16:11:24,401 - #4 class
INFO  16:11:24,401 - #17 Table
INFO  16:11:24,401 - #41 {
INFO  16:11:24,401 - #17 int
INFO  16:11:24,401 - #17 pos
INFO  16:11:24,401 - #39 [
INFO  16:11:24,401 - #40 ]
INFO  16:11:24,401 - #35 ,
INFO  16:11:24,401 - #17 neg
INFO  16:11:24,401 - #39 [
INFO  16:11:24,401 - #40 ]
INFO  16:11:24,401 - #35 ,
INFO  16:11:24,402 - #17 factor
INFO  16:11:24,402 - #34 ;
INFO  16:11:24,402 - #41 {
INFO  16:11:24,402 - #17 Table
INFO  16:11:24,402 - #37 (
INFO  16:11:24,402 - #17 int
INFO  16:11:24,402 - #17 factor
INFO  16:11:24,402 - #38 )
INFO  16:11:24,402 - #41 {
INFO  16:11:24,402 - #17 this
INFO  16:11:24,402 - #36 .
INFO  16:11:24,402 - #17 factor
INFO  16:11:24,402 - #31 =
INFO  16:11:24,402 - #17 factor
INFO  16:11:24,402 - #34 ;
INFO  16:11:24,402 - #42 }
INFO  16:11:24,403 - #13 void
INFO  16:11:24,403 - #17 putp
INFO  16:11:24,403 - #37 (
INFO  16:11:24,403 - #17 int
INFO  16:11:24,403 - #17 a
INFO  16:11:24,403 - #35 ,
INFO  16:11:24,403 - #17 int
INFO  16:11:24,403 - #17 idx
INFO  16:11:24,403 - #38 )
INFO  16:11:24,403 - #41 {
INFO  16:11:24,403 - #17 this
INFO  16:11:24,403 - #36 .
INFO  16:11:24,403 - #17 pos
INFO  16:11:24,403 - #39 [
INFO  16:11:24,404 - #17 idx
INFO  16:11:24,404 - #40 ]
INFO  16:11:24,404 - #31 =
INFO  16:11:24,404 - #17 a
INFO  16:11:24,404 - #17 qq
INFO  16:11:24,404 - #34 ;
INFO  16:11:24,404 - #10 print
INFO  16:11:24,404 - #37 (
INFO  16:11:24,404 - #17 x
INFO  16:11:24,404 - #38 )
INFO  16:11:24,404 - #34 ;
INFO  16:11:24,404 - #42 }
INFO  16:11:24,404 - #13 void
INFO  16:11:24,404 - #17 putn
INFO  16:11:24,404 - #37 (
INFO  16:11:24,404 - #17 int
INFO  16:11:24,404 - #17 a
INFO  16:11:24,405 - #35 ,
INFO  16:11:24,405 - #17 int
INFO  16:11:24,405 - #17 idx
INFO  16:11:24,405 - #38 )
INFO  16:11:24,405 - #41 {
INFO  16:11:24,405 - #17 this
INFO  16:11:24,405 - #36 .
INFO  16:11:24,405 - #17 neg
INFO  16:11:24,405 - #39 [
INFO  16:11:24,405 - #17 idx
INFO  16:11:24,405 - #40 ]
INFO  16:11:24,405 - #31 =
INFO  16:11:24,405 - #17 a
INFO  16:11:24,405 - #34 ;
INFO  16:11:24,405 - #42 }
INFO  16:11:24,406 - #17 int
INFO  16:11:24,406 - #17 getp
INFO  16:11:24,406 - #37 (
INFO  16:11:24,406 - #17 int
INFO  16:11:24,406 - #17 idx
INFO  16:11:24,406 - #38 )
INFO  16:11:24,406 - #41 {
INFO  16:11:24,406 - #12 return
INFO  16:11:24,406 - #17 pos
INFO  16:11:24,406 - #39 [
INFO  16:11:24,406 - #17 idx
INFO  16:11:24,406 - #40 ]
INFO  16:11:24,406 - #34 ;
INFO  16:11:24,406 - #42 }
INFO  16:11:24,406 - #17 int
INFO  16:11:24,406 - #17 getn
INFO  16:11:24,406 - #37 (
INFO  16:11:24,407 - #17 int
INFO  16:11:24,407 - #17 idx
INFO  16:11:24,407 - #38 )
INFO  16:11:24,407 - #41 {
INFO  16:11:24,407 - #12 return
INFO  16:11:24,407 - #17 neg
INFO  16:11:24,407 - #39 [
INFO  16:11:24,407 - #17 idx
INFO  16:11:24,407 - #40 ]
INFO  16:11:24,407 - #34 ;
INFO  16:11:24,407 - #42 }
INFO  16:11:24,407 - #42 }
INFO  16:11:24,407 - #42 }
INFO  16:11:24,407 - #17 Table
INFO  16:11:24,407 - #17 val
INFO  16:11:24,407 - #34 ;
INFO  16:11:24,407 - #17 Int
INFO  16:11:24,407 - #17 rows
INFO  16:11:24,408 - #35 ,
INFO  16:11:24,408 - #17 columns
INFO  16:11:24,408 - #34 ;
INFO  16:11:24,408 - #41 {
INFO  16:11:24,408 - #13 void
INFO  16:11:24,408 - #17 f
INFO  16:11:24,408 - #37 (
INFO  16:11:24,408 - #17 char
INFO  16:11:24,408 - #17 ch
INFO  16:11:24,408 - #35 ,
INFO  16:11:24,408 - #17 int
INFO  16:11:24,408 - #17 a
INFO  16:11:24,408 - #35 ,
INFO  16:11:24,408 - #17 int
INFO  16:11:24,408 - #17 arg
INFO  16:11:24,408 - #38 )
INFO  16:11:24,408 - #17 int
INFO  16:11:24,409 - #17 x
INFO  16:11:24,409 - #34 ;
INFO  16:11:24,409 - #41 {
INFO  16:11:24,409 - #17 x
INFO  16:11:24,409 - #31 =
INFO  16:11:24,409 - #17 arg
INFO  16:11:24,409 - #34 ;
INFO  16:11:24,409 - #10 print
INFO  16:11:24,409 - #37 (
INFO  16:11:24,409 - #17 x
INFO  16:11:24,409 - #38 )
INFO  16:11:24,409 - #34 ;
INFO  16:11:24,409 - #42 }
INFO  16:11:24,409 - #13 void
INFO  16:11:24,409 - #17 main
INFO  16:11:24,409 - #37 (
INFO  16:11:24,409 - #38 )
INFO  16:11:24,410 - #17 int
INFO  16:11:24,410 - #17 x
INFO  16:11:24,410 - #35 ,
INFO  16:11:24,410 - #17 i
INFO  16:11:24,410 - #34 ;
INFO  16:11:24,410 - #17 char
INFO  16:11:24,410 - #17 c
INFO  16:11:24,410 - #34 ;
INFO  16:11:24,410 - #17 int
INFO  16:11:24,410 - #17 arr
INFO  16:11:24,410 - #39 [
INFO  16:11:24,410 - #40 ]
INFO  16:11:24,410 - #34 ;
INFO  16:11:24,410 - #41 {
INFO  16:11:24,410 - #17 val
INFO  16:11:24,410 - #31 =
INFO  16:11:24,410 - #9 new
INFO  16:11:24,410 - #17 Table
INFO  16:11:24,410 - #37 (
INFO  16:11:24,411 - #47 2
INFO  16:11:24,411 - #38 )
INFO  16:11:24,411 - #34 ;
INFO  16:11:24,411 - #17 arr
INFO  16:11:24,411 - #31 =
INFO  16:11:24,411 - #9 new
INFO  16:11:24,411 - #17 int
INFO  16:11:24,411 - #39 [
INFO  16:11:24,411 - #47 3
INFO  16:11:24,411 - #40 ]
INFO  16:11:24,411 - #34 ;
INFO  16:11:24,411 - #17 i
INFO  16:11:24,411 - #31 =
INFO  16:11:24,411 - #47 0
INFO  16:11:24,411 - #34 ;
INFO  16:11:24,411 - #8 while
INFO  16:11:24,412 - #37 (
INFO  16:11:24,412 - #17 i
INFO  16:11:24,412 - #27 <
INFO  16:11:24,412 - #47 3
INFO  16:11:24,412 - #38 )
INFO  16:11:24,412 - #41 {
INFO  16:11:24,412 - #17 arr
INFO  16:11:24,412 - #39 [
INFO  16:11:24,412 - #17 i
INFO  16:11:24,412 - #40 ]
INFO  16:11:24,412 - #31 =
INFO  16:11:24,412 - #17 i
INFO  16:11:24,412 - #34 ;
INFO  16:11:24,412 - #17 i
INFO  16:11:24,412 - #32 ++
INFO  16:11:24,412 - #34 ;
INFO  16:11:24,412 - #42 }
INFO  16:11:24,412 - #17 arr
INFO  16:11:24,412 - #36 .
INFO  16:11:24,412 - #16 foreach
INFO  16:11:24,412 - #37 (
INFO  16:11:24,412 - #17 x
INFO  16:11:24,412 - #43 =>
INFO  16:11:24,413 - #10 print
INFO  16:11:24,413 - #37 (
INFO  16:11:24,413 - #17 x
INFO  16:11:24,413 - #38 )
INFO  16:11:24,413 - #34 ;
INFO  16:11:24,413 - #38 )
INFO  16:11:24,413 - #34 ;
INFO  16:11:24,413 - #17 val
INFO  16:11:24,413 - #36 .
INFO  16:11:24,413 - #17 pos
INFO  16:11:24,413 - #31 =
INFO  16:11:24,413 - #9 new
INFO  16:11:24,413 - #17 int
INFO  16:11:24,413 - #39 [
INFO  16:11:24,413 - #17 size
INFO  16:11:24,413 - #40 ]
INFO  16:11:24,413 - #34 ;
INFO  16:11:24,413 - #17 val
INFO  16:11:24,413 - #36 .
INFO  16:11:24,413 - #17 neg
INFO  16:11:24,413 - #31 =
INFO  16:11:24,413 - #9 new
INFO  16:11:24,413 - #17 int
INFO  16:11:24,413 - #39 [
INFO  16:11:24,413 - #17 size
INFO  16:11:24,413 - #40 ]
INFO  16:11:24,413 - #34 ;
INFO  16:11:24,413 - #11 read
INFO  16:11:24,413 - #37 (
INFO  16:11:24,414 - #17 x
INFO  16:11:24,414 - #38 )
INFO  16:11:24,414 - #34 ;
INFO  16:11:24,414 - #8 while
INFO  16:11:24,414 - #37 (
INFO  16:11:24,414 - #17 i
INFO  16:11:24,414 - #27 <
INFO  16:11:24,414 - #17 size
INFO  16:11:24,414 - #38 )
INFO  16:11:24,414 - #41 {
INFO  16:11:24,414 - #17 val
INFO  16:11:24,414 - #36 .
INFO  16:11:24,414 - #17 putp
INFO  16:11:24,414 - #37 (
INFO  16:11:24,414 - #47 0
INFO  16:11:24,414 - #35 ,
INFO  16:11:24,414 - #17 i
INFO  16:11:24,414 - #38 )
INFO  16:11:24,414 - #34 ;
INFO  16:11:24,414 - #17 val
INFO  16:11:24,414 - #36 .
INFO  16:11:24,414 - #17 putn
INFO  16:11:24,414 - #37 (
INFO  16:11:24,414 - #47 0
INFO  16:11:24,414 - #35 ,
INFO  16:11:24,414 - #17 i
INFO  16:11:24,415 - #38 )
INFO  16:11:24,415 - #34 ;
INFO  16:11:24,415 - #17 i
INFO  16:11:24,415 - #32 ++
INFO  16:11:24,415 - #34 ;
INFO  16:11:24,415 - #42 }
INFO  16:11:24,415 - #17 f
INFO  16:11:24,415 - #37 (
INFO  16:11:24,415 - #17 c
INFO  16:11:24,415 - #35 ,
INFO  16:11:24,415 - #17 x
INFO  16:11:24,415 - #35 ,
INFO  16:11:24,415 - #17 i
INFO  16:11:24,415 - #38 )
INFO  16:11:24,415 - #34 ;
INFO  16:11:24,415 - #11 read
INFO  16:11:24,415 - #37 (
INFO  16:11:24,415 - #17 rows
INFO  16:11:24,415 - #38 )
INFO  16:11:24,415 - #34 ;
INFO  16:11:24,415 - #17 x
INFO  16:11:24,415 - #31 =
INFO  16:11:24,415 - #17 rows
INFO  16:11:24,415 - #34 ;
INFO  16:11:24,415 - #8 while
INFO  16:11:24,415 - #37 (
INFO  16:11:24,415 - #49 true
INFO  16:11:24,415 - #38 )
INFO  16:11:24,415 - #41 {
INFO  16:11:24,415 - #7 if
INFO  16:11:24,415 - #37 (
INFO  16:11:24,416 - #17 x
INFO  16:11:24,416 - #28 <=
INFO  16:11:24,416 - #47 0
INFO  16:11:24,416 - #38 )
INFO  16:11:24,416 - #3 break
INFO  16:11:24,416 - #34 ;
INFO  16:11:24,416 - #7 if
INFO  16:11:24,416 - #37 (
INFO  16:11:24,416 - #47 0
INFO  16:11:24,416 - #28 <=
INFO  16:11:24,416 - #17 x
INFO  16:11:24,416 - #29 &&
INFO  16:11:24,416 - #17 x
INFO  16:11:24,416 - #27 <
INFO  16:11:24,416 - #17 size
INFO  16:11:24,416 - #38 )
INFO  16:11:24,416 - #41 {
INFO  16:11:24,416 - #17 val
INFO  16:11:24,416 - #36 .
INFO  16:11:24,416 - #17 putp
INFO  16:11:24,416 - #37 (
INFO  16:11:24,416 - #17 val
INFO  16:11:24,416 - #36 .
INFO  16:11:24,416 - #17 getp
INFO  16:11:24,416 - #37 (
INFO  16:11:24,416 - #17 x
INFO  16:11:24,416 - #38 )
INFO  16:11:24,416 - #18 +
INFO  16:11:24,416 - #47 1
INFO  16:11:24,416 - #38 )
INFO  16:11:24,416 - #34 ;
INFO  16:11:24,416 - #42 }
INFO  16:11:24,416 - #5 else
INFO  16:11:24,417 - #7 if
INFO  16:11:24,417 - #37 (
INFO  16:11:24,417 - #19 -
INFO  16:11:24,417 - #17 size
INFO  16:11:24,417 - #27 <
INFO  16:11:24,417 - #17 x
INFO  16:11:24,417 - #29 &&
INFO  16:11:24,417 - #17 x
INFO  16:11:24,417 - #27 <
INFO  16:11:24,417 - #47 0
INFO  16:11:24,417 - #38 )
INFO  16:11:24,417 - #41 {
INFO  16:11:24,417 - #17 val
INFO  16:11:24,417 - #36 .
INFO  16:11:24,417 - #17 putn
INFO  16:11:24,417 - #37 (
INFO  16:11:24,417 - #17 val
INFO  16:11:24,417 - #36 .
INFO  16:11:24,417 - #17 getn
INFO  16:11:24,417 - #37 (
INFO  16:11:24,417 - #19 -
INFO  16:11:24,417 - #17 x
INFO  16:11:24,417 - #38 )
INFO  16:11:24,417 - #18 +
INFO  16:11:24,417 - #47 1
INFO  16:11:24,417 - #38 )
INFO  16:11:24,417 - #34 ;
INFO  16:11:24,417 - #42 }
INFO  16:11:24,417 - #11 read
INFO  16:11:24,417 - #37 (
INFO  16:11:24,417 - #17 x
INFO  16:11:24,417 - #38 )
INFO  16:11:24,417 - #34 ;
INFO  16:11:24,417 - #42 }
INFO  16:11:24,418 - #42 }
INFO  16:11:24,418 - #42 }
ERROR 16:11:24,418 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
