INFO  16:10:43,594 - Compiling source file: D:\GitHub repos\PP1-Projekat\MJCompiler\test\program.mj
INFO  16:10:43,624 - #2 program
INFO  16:10:43,624 - #17 p
INFO  16:10:43,624 - #6 const
INFO  16:10:43,625 - #17 int
INFO  16:10:43,625 - #17 size
INFO  16:10:43,625 - #31 =
INFO  16:10:43,625 - #47 10
INFO  16:10:43,625 - #34 ;
INFO  16:10:43,626 - #6 const
INFO  16:10:43,626 - #17 int
INFO  16:10:43,626 - #17 size
INFO  16:10:43,626 - #34 ;
ERROR 16:10:43,626 - 
Sintaksna greska na liniji 4
INFO  16:10:43,626 - #17 int
INFO  16:10:43,626 - #17 size2
INFO  16:10:43,626 - #35 ,
INFO  16:10:43,627 - #17 ass
INFO  16:10:43,627 - #34 ;
INFO  16:10:43,627 - #4 class
INFO  16:10:43,627 - #17 Table
INFO  16:10:43,627 - #41 {
INFO  16:10:43,627 - #17 int
INFO  16:10:43,627 - #17 pos
INFO  16:10:43,628 - #39 [
INFO  16:10:43,628 - #40 ]
INFO  16:10:43,628 - #35 ,
INFO  16:10:43,628 - #17 neg
INFO  16:10:43,628 - #39 [
INFO  16:10:43,628 - #40 ]
INFO  16:10:43,628 - #35 ,
INFO  16:10:43,628 - #17 factor
INFO  16:10:43,628 - #34 ;
INFO  16:10:43,628 - #41 {
INFO  16:10:43,628 - #17 Table
INFO  16:10:43,628 - #37 (
INFO  16:10:43,628 - #17 int
INFO  16:10:43,628 - #17 factor
INFO  16:10:43,628 - #38 )
INFO  16:10:43,628 - #41 {
INFO  16:10:43,628 - #17 this
INFO  16:10:43,628 - #36 .
INFO  16:10:43,628 - #17 factor
INFO  16:10:43,629 - #31 =
INFO  16:10:43,629 - #17 factor
INFO  16:10:43,629 - #34 ;
INFO  16:10:43,629 - #42 }
INFO  16:10:43,629 - #13 void
INFO  16:10:43,629 - #17 putp
INFO  16:10:43,629 - #37 (
INFO  16:10:43,629 - #17 int
INFO  16:10:43,629 - #17 a
INFO  16:10:43,629 - #35 ,
INFO  16:10:43,629 - #17 int
INFO  16:10:43,629 - #17 idx
INFO  16:10:43,629 - #38 )
INFO  16:10:43,629 - #41 {
INFO  16:10:43,629 - #17 this
INFO  16:10:43,629 - #36 .
INFO  16:10:43,629 - #17 pos
INFO  16:10:43,629 - #39 [
INFO  16:10:43,629 - #17 idx
INFO  16:10:43,630 - #40 ]
INFO  16:10:43,630 - #31 =
INFO  16:10:43,630 - #17 a
INFO  16:10:43,630 - #17 qq
INFO  16:10:43,630 - #34 ;
INFO  16:10:43,630 - #10 print
INFO  16:10:43,630 - #37 (
INFO  16:10:43,630 - #17 x
INFO  16:10:43,630 - #38 )
INFO  16:10:43,630 - #34 ;
INFO  16:10:43,630 - #42 }
INFO  16:10:43,630 - #13 void
INFO  16:10:43,630 - #17 putn
INFO  16:10:43,630 - #37 (
INFO  16:10:43,630 - #17 int
INFO  16:10:43,630 - #17 a
INFO  16:10:43,630 - #35 ,
INFO  16:10:43,630 - #17 int
INFO  16:10:43,631 - #17 idx
INFO  16:10:43,631 - #38 )
INFO  16:10:43,631 - #41 {
INFO  16:10:43,631 - #17 this
INFO  16:10:43,631 - #36 .
INFO  16:10:43,631 - #17 neg
INFO  16:10:43,631 - #39 [
INFO  16:10:43,631 - #17 idx
INFO  16:10:43,631 - #40 ]
INFO  16:10:43,631 - #31 =
INFO  16:10:43,631 - #17 a
INFO  16:10:43,631 - #34 ;
INFO  16:10:43,631 - #42 }
INFO  16:10:43,631 - #17 int
INFO  16:10:43,631 - #17 getp
INFO  16:10:43,631 - #37 (
INFO  16:10:43,631 - #17 int
INFO  16:10:43,631 - #17 idx
INFO  16:10:43,631 - #38 )
INFO  16:10:43,631 - #41 {
INFO  16:10:43,631 - #12 return
INFO  16:10:43,631 - #17 pos
INFO  16:10:43,632 - #39 [
INFO  16:10:43,632 - #17 idx
INFO  16:10:43,632 - #40 ]
INFO  16:10:43,632 - #34 ;
INFO  16:10:43,632 - #42 }
INFO  16:10:43,632 - #17 int
INFO  16:10:43,632 - #17 getn
INFO  16:10:43,632 - #37 (
INFO  16:10:43,632 - #17 int
INFO  16:10:43,632 - #17 idx
INFO  16:10:43,632 - #38 )
INFO  16:10:43,632 - #41 {
INFO  16:10:43,632 - #12 return
INFO  16:10:43,632 - #17 neg
INFO  16:10:43,632 - #39 [
INFO  16:10:43,632 - #17 idx
INFO  16:10:43,632 - #40 ]
INFO  16:10:43,632 - #34 ;
INFO  16:10:43,632 - #42 }
INFO  16:10:43,632 - #42 }
INFO  16:10:43,632 - #42 }
INFO  16:10:43,632 - #17 Table
INFO  16:10:43,632 - #17 val
INFO  16:10:43,633 - #34 ;
INFO  16:10:43,633 - #17 Int
INFO  16:10:43,633 - #17 rows
INFO  16:10:43,633 - #35 ,
INFO  16:10:43,633 - #17 columns
INFO  16:10:43,633 - #34 ;
INFO  16:10:43,633 - #41 {
INFO  16:10:43,633 - #13 void
INFO  16:10:43,633 - #17 f
INFO  16:10:43,633 - #37 (
INFO  16:10:43,633 - #17 char
INFO  16:10:43,633 - #17 ch
INFO  16:10:43,633 - #35 ,
INFO  16:10:43,633 - #17 int
INFO  16:10:43,633 - #17 a
INFO  16:10:43,633 - #35 ,
INFO  16:10:43,633 - #17 int
INFO  16:10:43,633 - #17 arg
INFO  16:10:43,633 - #38 )
INFO  16:10:43,633 - #17 int
INFO  16:10:43,633 - #17 x
INFO  16:10:43,634 - #34 ;
INFO  16:10:43,634 - #41 {
INFO  16:10:43,634 - #17 x
INFO  16:10:43,634 - #31 =
INFO  16:10:43,634 - #17 arg
INFO  16:10:43,634 - #34 ;
INFO  16:10:43,634 - #10 print
INFO  16:10:43,634 - #37 (
INFO  16:10:43,634 - #17 x
INFO  16:10:43,634 - #38 )
INFO  16:10:43,634 - #34 ;
INFO  16:10:43,634 - #42 }
INFO  16:10:43,634 - #13 void
INFO  16:10:43,634 - #17 main
INFO  16:10:43,634 - #37 (
INFO  16:10:43,634 - #38 )
INFO  16:10:43,634 - #17 int
INFO  16:10:43,634 - #17 x
INFO  16:10:43,634 - #35 ,
INFO  16:10:43,634 - #17 i
INFO  16:10:43,634 - #34 ;
INFO  16:10:43,634 - #17 char
INFO  16:10:43,634 - #17 c
INFO  16:10:43,635 - #34 ;
INFO  16:10:43,635 - #17 int
INFO  16:10:43,635 - #17 arr
INFO  16:10:43,635 - #39 [
INFO  16:10:43,635 - #40 ]
INFO  16:10:43,635 - #34 ;
INFO  16:10:43,635 - #41 {
INFO  16:10:43,635 - #17 val
INFO  16:10:43,635 - #31 =
INFO  16:10:43,635 - #9 new
INFO  16:10:43,635 - #17 Table
INFO  16:10:43,635 - #37 (
INFO  16:10:43,635 - #47 2
INFO  16:10:43,635 - #38 )
INFO  16:10:43,635 - #34 ;
INFO  16:10:43,635 - #17 arr
INFO  16:10:43,635 - #31 =
INFO  16:10:43,635 - #9 new
INFO  16:10:43,635 - #17 int
INFO  16:10:43,635 - #39 [
INFO  16:10:43,635 - #47 3
INFO  16:10:43,635 - #40 ]
INFO  16:10:43,635 - #34 ;
INFO  16:10:43,635 - #17 i
INFO  16:10:43,635 - #31 =
INFO  16:10:43,636 - #47 0
INFO  16:10:43,636 - #34 ;
INFO  16:10:43,636 - #8 while
INFO  16:10:43,636 - #37 (
INFO  16:10:43,636 - #17 i
INFO  16:10:43,636 - #27 <
INFO  16:10:43,636 - #47 3
INFO  16:10:43,636 - #38 )
INFO  16:10:43,636 - #41 {
INFO  16:10:43,636 - #17 arr
INFO  16:10:43,636 - #39 [
INFO  16:10:43,636 - #17 i
INFO  16:10:43,636 - #40 ]
INFO  16:10:43,636 - #31 =
INFO  16:10:43,636 - #17 i
INFO  16:10:43,636 - #34 ;
INFO  16:10:43,636 - #17 i
INFO  16:10:43,636 - #32 ++
INFO  16:10:43,636 - #34 ;
INFO  16:10:43,636 - #42 }
INFO  16:10:43,636 - #17 arr
INFO  16:10:43,636 - #36 .
INFO  16:10:43,636 - #16 foreach
INFO  16:10:43,636 - #37 (
INFO  16:10:43,636 - #17 x
INFO  16:10:43,636 - #43 =>
INFO  16:10:43,637 - #10 print
INFO  16:10:43,637 - #37 (
INFO  16:10:43,637 - #17 x
INFO  16:10:43,637 - #38 )
INFO  16:10:43,637 - #34 ;
INFO  16:10:43,637 - #38 )
INFO  16:10:43,637 - #34 ;
INFO  16:10:43,637 - #17 val
INFO  16:10:43,637 - #36 .
INFO  16:10:43,637 - #17 pos
INFO  16:10:43,637 - #31 =
INFO  16:10:43,637 - #9 new
INFO  16:10:43,637 - #17 int
INFO  16:10:43,637 - #39 [
INFO  16:10:43,637 - #17 size
INFO  16:10:43,637 - #40 ]
INFO  16:10:43,637 - #34 ;
INFO  16:10:43,637 - #17 val
INFO  16:10:43,637 - #36 .
INFO  16:10:43,637 - #17 neg
INFO  16:10:43,637 - #31 =
INFO  16:10:43,637 - #9 new
INFO  16:10:43,637 - #17 int
INFO  16:10:43,637 - #39 [
INFO  16:10:43,637 - #17 size
INFO  16:10:43,637 - #40 ]
INFO  16:10:43,638 - #34 ;
INFO  16:10:43,638 - #11 read
INFO  16:10:43,638 - #37 (
INFO  16:10:43,638 - #17 x
INFO  16:10:43,638 - #38 )
INFO  16:10:43,638 - #34 ;
INFO  16:10:43,638 - #8 while
INFO  16:10:43,638 - #37 (
INFO  16:10:43,638 - #17 i
INFO  16:10:43,638 - #27 <
INFO  16:10:43,638 - #17 size
INFO  16:10:43,638 - #38 )
INFO  16:10:43,638 - #41 {
INFO  16:10:43,638 - #17 val
INFO  16:10:43,638 - #36 .
INFO  16:10:43,638 - #17 putp
INFO  16:10:43,638 - #37 (
INFO  16:10:43,638 - #47 0
INFO  16:10:43,638 - #35 ,
INFO  16:10:43,638 - #17 i
INFO  16:10:43,638 - #38 )
INFO  16:10:43,638 - #34 ;
INFO  16:10:43,638 - #17 val
INFO  16:10:43,639 - #36 .
INFO  16:10:43,639 - #17 putn
INFO  16:10:43,639 - #37 (
INFO  16:10:43,639 - #47 0
INFO  16:10:43,639 - #35 ,
INFO  16:10:43,639 - #17 i
INFO  16:10:43,639 - #38 )
INFO  16:10:43,639 - #34 ;
INFO  16:10:43,639 - #17 i
INFO  16:10:43,639 - #32 ++
INFO  16:10:43,639 - #34 ;
INFO  16:10:43,639 - #42 }
INFO  16:10:43,639 - #17 f
INFO  16:10:43,639 - #37 (
INFO  16:10:43,639 - #17 c
INFO  16:10:43,639 - #35 ,
INFO  16:10:43,639 - #17 x
INFO  16:10:43,639 - #35 ,
INFO  16:10:43,639 - #17 i
INFO  16:10:43,639 - #38 )
INFO  16:10:43,639 - #34 ;
INFO  16:10:43,639 - #11 read
INFO  16:10:43,639 - #37 (
INFO  16:10:43,639 - #17 rows
INFO  16:10:43,639 - #38 )
INFO  16:10:43,639 - #34 ;
INFO  16:10:43,639 - #17 x
INFO  16:10:43,639 - #31 =
INFO  16:10:43,639 - #17 rows
INFO  16:10:43,640 - #34 ;
INFO  16:10:43,640 - #8 while
INFO  16:10:43,640 - #37 (
INFO  16:10:43,640 - #49 true
INFO  16:10:43,640 - #38 )
INFO  16:10:43,640 - #41 {
INFO  16:10:43,640 - #7 if
INFO  16:10:43,640 - #37 (
INFO  16:10:43,640 - #17 x
INFO  16:10:43,640 - #28 <=
INFO  16:10:43,640 - #47 0
INFO  16:10:43,640 - #38 )
INFO  16:10:43,640 - #3 break
INFO  16:10:43,640 - #34 ;
INFO  16:10:43,640 - #7 if
INFO  16:10:43,640 - #37 (
INFO  16:10:43,640 - #47 0
INFO  16:10:43,640 - #28 <=
INFO  16:10:43,640 - #17 x
INFO  16:10:43,640 - #29 &&
INFO  16:10:43,640 - #17 x
INFO  16:10:43,640 - #27 <
INFO  16:10:43,640 - #17 size
INFO  16:10:43,640 - #38 )
INFO  16:10:43,640 - #41 {
INFO  16:10:43,640 - #17 val
INFO  16:10:43,640 - #36 .
INFO  16:10:43,640 - #17 putp
INFO  16:10:43,640 - #37 (
INFO  16:10:43,640 - #17 val
INFO  16:10:43,641 - #36 .
INFO  16:10:43,641 - #17 getp
INFO  16:10:43,641 - #37 (
INFO  16:10:43,641 - #17 x
INFO  16:10:43,641 - #38 )
INFO  16:10:43,641 - #18 +
INFO  16:10:43,641 - #47 1
INFO  16:10:43,641 - #38 )
INFO  16:10:43,641 - #34 ;
INFO  16:10:43,641 - #42 }
INFO  16:10:43,641 - #5 else
INFO  16:10:43,641 - #7 if
INFO  16:10:43,641 - #37 (
INFO  16:10:43,641 - #19 -
INFO  16:10:43,641 - #17 size
INFO  16:10:43,641 - #27 <
INFO  16:10:43,641 - #17 x
INFO  16:10:43,641 - #29 &&
INFO  16:10:43,641 - #17 x
INFO  16:10:43,641 - #27 <
INFO  16:10:43,641 - #47 0
INFO  16:10:43,641 - #38 )
INFO  16:10:43,641 - #41 {
INFO  16:10:43,641 - #17 val
INFO  16:10:43,641 - #36 .
INFO  16:10:43,641 - #17 putn
INFO  16:10:43,641 - #37 (
INFO  16:10:43,641 - #17 val
INFO  16:10:43,641 - #36 .
INFO  16:10:43,641 - #17 getn
INFO  16:10:43,641 - #37 (
INFO  16:10:43,641 - #19 -
INFO  16:10:43,641 - #17 x
INFO  16:10:43,641 - #38 )
INFO  16:10:43,642 - #18 +
INFO  16:10:43,642 - #47 1
INFO  16:10:43,642 - #38 )
INFO  16:10:43,642 - #34 ;
INFO  16:10:43,642 - #42 }
INFO  16:10:43,642 - #11 read
INFO  16:10:43,642 - #37 (
INFO  16:10:43,642 - #17 x
INFO  16:10:43,642 - #38 )
INFO  16:10:43,642 - #34 ;
INFO  16:10:43,642 - #42 }
INFO  16:10:43,642 - #42 }
INFO  16:10:43,642 - #42 }
ERROR 16:10:43,642 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
