INFO  03:18:04,886 - Compiling source file: D:\GitHub repos\PP1-Projekat\MJCompiler\test\program.mj
INFO  03:18:04,890 - #2 program
INFO  03:18:04,890 - #20 p
INFO  03:18:04,890 - #7 const
INFO  03:18:04,890 - #20 int
INFO  03:18:04,890 - #20 size
INFO  03:18:04,890 - #37 =
INFO  03:18:04,890 - #21 10
INFO  03:18:04,890 - #40 ;
INFO  03:18:04,890 - #4 class
INFO  03:18:04,890 - #20 Table
INFO  03:18:04,891 - #48 {
INFO  03:18:04,891 - #20 int
INFO  03:18:04,891 - #20 pos
INFO  03:18:04,891 - #46 [
INFO  03:18:04,891 - #47 ]
INFO  03:18:04,891 - #42 ,
INFO  03:18:04,891 - #20 neg
INFO  03:18:04,891 - #46 [
INFO  03:18:04,891 - #47 ]
INFO  03:18:04,891 - #42 ,
INFO  03:18:04,891 - #20 factor
INFO  03:18:04,891 - #40 ;
INFO  03:18:04,891 - #48 {
INFO  03:18:04,891 - #20 Table
INFO  03:18:04,892 - #44 (
INFO  03:18:04,892 - #20 int
INFO  03:18:04,892 - #20 factor
INFO  03:18:04,892 - #45 )
INFO  03:18:04,892 - #48 {
INFO  03:18:04,892 - #18 this
INFO  03:18:04,892 - #43 .
INFO  03:18:04,892 - #20 factor
INFO  03:18:04,892 - #37 =
INFO  03:18:04,892 - #20 factor
INFO  03:18:04,892 - #40 ;
INFO  03:18:04,892 - #49 }
INFO  03:18:04,892 - #15 void
INFO  03:18:04,892 - #20 putp
INFO  03:18:04,892 - #44 (
INFO  03:18:04,892 - #20 int
INFO  03:18:04,892 - #20 a
INFO  03:18:04,892 - #42 ,
INFO  03:18:04,892 - #20 int
INFO  03:18:04,892 - #20 idx
INFO  03:18:04,892 - #45 )
INFO  03:18:04,893 - #48 {
INFO  03:18:04,893 - #18 this
INFO  03:18:04,893 - #43 .
INFO  03:18:04,893 - #20 pos
INFO  03:18:04,893 - #46 [
INFO  03:18:04,893 - #20 idx
INFO  03:18:04,893 - #47 ]
INFO  03:18:04,893 - #37 =
INFO  03:18:04,893 - #20 a
INFO  03:18:04,893 - #40 ;
INFO  03:18:04,893 - #49 }
INFO  03:18:04,893 - #15 void
INFO  03:18:04,893 - #20 putn
INFO  03:18:04,893 - #44 (
INFO  03:18:04,893 - #20 int
INFO  03:18:04,893 - #20 a
INFO  03:18:04,893 - #42 ,
INFO  03:18:04,893 - #20 int
INFO  03:18:04,893 - #20 idx
INFO  03:18:04,893 - #45 )
INFO  03:18:04,894 - #48 {
INFO  03:18:04,894 - #18 this
INFO  03:18:04,894 - #43 .
INFO  03:18:04,894 - #20 neg
INFO  03:18:04,894 - #46 [
INFO  03:18:04,894 - #20 idx
INFO  03:18:04,894 - #47 ]
INFO  03:18:04,894 - #37 =
INFO  03:18:04,894 - #20 a
INFO  03:18:04,894 - #40 ;
INFO  03:18:04,894 - #49 }
INFO  03:18:04,894 - #20 int
INFO  03:18:04,894 - #20 getp
INFO  03:18:04,894 - #44 (
INFO  03:18:04,894 - #20 int
INFO  03:18:04,894 - #20 idx
INFO  03:18:04,895 - #45 )
INFO  03:18:04,895 - #48 {
INFO  03:18:04,895 - #14 return
INFO  03:18:04,895 - #20 pos
INFO  03:18:04,895 - #46 [
INFO  03:18:04,895 - #20 idx
INFO  03:18:04,895 - #47 ]
INFO  03:18:04,895 - #40 ;
INFO  03:18:04,895 - #49 }
INFO  03:18:04,895 - #20 int
INFO  03:18:04,895 - #20 getn
INFO  03:18:04,895 - #44 (
INFO  03:18:04,895 - #20 int
INFO  03:18:04,895 - #20 idx
INFO  03:18:04,895 - #45 )
INFO  03:18:04,895 - #48 {
INFO  03:18:04,896 - #14 return
INFO  03:18:04,896 - #20 neg
INFO  03:18:04,896 - #46 [
INFO  03:18:04,896 - #20 idx
INFO  03:18:04,896 - #47 ]
INFO  03:18:04,896 - #40 ;
INFO  03:18:04,896 - #49 }
INFO  03:18:04,896 - #49 }
INFO  03:18:04,896 - #49 }
INFO  03:18:04,896 - #20 Table
INFO  03:18:04,896 - #20 val
INFO  03:18:04,896 - #40 ;
INFO  03:18:04,896 - #20 Int
INFO  03:18:04,896 - #20 rows
INFO  03:18:04,896 - #42 ,
INFO  03:18:04,896 - #20 columns
INFO  03:18:04,896 - #40 ;
INFO  03:18:04,896 - #48 {
INFO  03:18:04,897 - #15 void
INFO  03:18:04,897 - #20 f
INFO  03:18:04,897 - #44 (
INFO  03:18:04,897 - #20 char
INFO  03:18:04,897 - #20 ch
INFO  03:18:04,897 - #42 ,
INFO  03:18:04,897 - #20 int
INFO  03:18:04,897 - #20 a
INFO  03:18:04,897 - #42 ,
INFO  03:18:04,897 - #20 int
INFO  03:18:04,897 - #20 arg
INFO  03:18:04,897 - #45 )
INFO  03:18:04,897 - #20 int
INFO  03:18:04,897 - #20 x
INFO  03:18:04,897 - #40 ;
INFO  03:18:04,897 - #48 {
INFO  03:18:04,897 - #20 x
INFO  03:18:04,898 - #37 =
INFO  03:18:04,898 - #20 arg
INFO  03:18:04,898 - #40 ;
INFO  03:18:04,898 - #49 }
INFO  03:18:04,898 - #15 void
INFO  03:18:04,898 - #20 main
INFO  03:18:04,898 - #44 (
INFO  03:18:04,898 - #45 )
INFO  03:18:04,898 - #20 int
INFO  03:18:04,898 - #20 x
INFO  03:18:04,898 - #42 ,
INFO  03:18:04,898 - #20 i
INFO  03:18:04,898 - #40 ;
INFO  03:18:04,898 - #20 char
INFO  03:18:04,898 - #20 c
INFO  03:18:04,898 - #42 ,
INFO  03:18:04,898 - #20 int
INFO  03:18:04,899 - #20 arr
INFO  03:18:04,899 - #46 [
INFO  03:18:04,899 - #47 ]
INFO  03:18:04,899 - #40 ;
INFO  03:18:04,899 - #48 {
INFO  03:18:04,899 - #20 val
INFO  03:18:04,899 - #37 =
INFO  03:18:04,899 - #11 new
INFO  03:18:04,899 - #20 Table
INFO  03:18:04,899 - #44 (
INFO  03:18:04,899 - #21 2
INFO  03:18:04,899 - #45 )
INFO  03:18:04,899 - #40 ;
INFO  03:18:04,899 - #20 arr
INFO  03:18:04,899 - #37 =
INFO  03:18:04,899 - #11 new
INFO  03:18:04,899 - #20 int
INFO  03:18:04,899 - #46 [
INFO  03:18:04,899 - #21 3
INFO  03:18:04,899 - #47 ]
INFO  03:18:04,899 - #40 ;
INFO  03:18:04,899 - #20 i
INFO  03:18:04,899 - #37 =
INFO  03:18:04,899 - #21 0
INFO  03:18:04,900 - #40 ;
INFO  03:18:04,900 - #10 while
INFO  03:18:04,900 - #44 (
INFO  03:18:04,900 - #20 i
INFO  03:18:04,900 - #33 <
INFO  03:18:04,900 - #21 3
INFO  03:18:04,900 - #45 )
INFO  03:18:04,900 - #48 {
INFO  03:18:04,900 - #20 arr
INFO  03:18:04,900 - #46 [
INFO  03:18:04,900 - #20 i
INFO  03:18:04,900 - #47 ]
INFO  03:18:04,900 - #37 =
INFO  03:18:04,900 - #20 i
INFO  03:18:04,900 - #40 ;
INFO  03:18:04,900 - #20 i
INFO  03:18:04,900 - #38 ++
INFO  03:18:04,900 - #40 ;
INFO  03:18:04,900 - #49 }
INFO  03:18:04,900 - #20 arr
INFO  03:18:04,900 - #43 .
INFO  03:18:04,900 - #19 foreach
INFO  03:18:04,900 - #44 (
INFO  03:18:04,900 - #20 x
INFO  03:18:04,900 - #50 =>
INFO  03:18:04,901 - #12 print
INFO  03:18:04,901 - #44 (
INFO  03:18:04,901 - #20 x
INFO  03:18:04,901 - #45 )
INFO  03:18:04,901 - #40 ;
INFO  03:18:04,901 - #45 )
INFO  03:18:04,901 - #40 ;
INFO  03:18:04,901 - #20 val
INFO  03:18:04,901 - #43 .
INFO  03:18:04,901 - #20 pos
INFO  03:18:04,901 - #37 =
INFO  03:18:04,901 - #11 new
INFO  03:18:04,901 - #20 int
INFO  03:18:04,901 - #46 [
INFO  03:18:04,901 - #20 size
INFO  03:18:04,901 - #47 ]
INFO  03:18:04,901 - #40 ;
INFO  03:18:04,901 - #20 val
INFO  03:18:04,901 - #43 .
INFO  03:18:04,901 - #20 neg
INFO  03:18:04,901 - #37 =
INFO  03:18:04,901 - #11 new
INFO  03:18:04,901 - #20 int
INFO  03:18:04,901 - #46 [
INFO  03:18:04,901 - #20 size
INFO  03:18:04,901 - #47 ]
INFO  03:18:04,902 - #40 ;
INFO  03:18:04,902 - #13 read
INFO  03:18:04,902 - #44 (
INFO  03:18:04,902 - #20 x
INFO  03:18:04,902 - #45 )
INFO  03:18:04,902 - #40 ;
INFO  03:18:04,902 - #46 [
INFO  03:18:04,902 - #20 i
INFO  03:18:04,902 - #42 ,
INFO  03:18:04,902 - #42 ,
INFO  03:18:04,902 - #20 x
INFO  03:18:04,902 - #47 ]
INFO  03:18:04,902 - #37 =
INFO  03:18:04,902 - #20 arr
INFO  03:18:04,902 - #40 ;
INFO  03:18:04,902 - #10 while
INFO  03:18:04,902 - #44 (
INFO  03:18:04,902 - #20 i
INFO  03:18:04,902 - #33 <
INFO  03:18:04,902 - #20 size
INFO  03:18:04,902 - #45 )
INFO  03:18:04,902 - #48 {
INFO  03:18:04,902 - #20 val
INFO  03:18:04,902 - #43 .
INFO  03:18:04,902 - #20 putp
INFO  03:18:04,902 - #44 (
INFO  03:18:04,902 - #21 0
INFO  03:18:04,902 - #42 ,
INFO  03:18:04,902 - #20 i
INFO  03:18:04,902 - #45 )
INFO  03:18:04,902 - #40 ;
INFO  03:18:04,903 - #20 val
INFO  03:18:04,903 - #43 .
INFO  03:18:04,903 - #20 putn
INFO  03:18:04,903 - #44 (
INFO  03:18:04,903 - #21 0
INFO  03:18:04,903 - #42 ,
INFO  03:18:04,903 - #20 i
INFO  03:18:04,903 - #45 )
INFO  03:18:04,903 - #40 ;
INFO  03:18:04,903 - #20 i
INFO  03:18:04,903 - #38 ++
INFO  03:18:04,903 - #40 ;
INFO  03:18:04,903 - #49 }
INFO  03:18:04,903 - #20 f
INFO  03:18:04,903 - #44 (
INFO  03:18:04,903 - #20 c
INFO  03:18:04,903 - #42 ,
INFO  03:18:04,903 - #20 x
INFO  03:18:04,903 - #42 ,
INFO  03:18:04,903 - #20 i
INFO  03:18:04,903 - #45 )
INFO  03:18:04,903 - #40 ;
INFO  03:18:04,903 - #13 read
INFO  03:18:04,903 - #44 (
INFO  03:18:04,903 - #20 rows
INFO  03:18:04,904 - #45 )
INFO  03:18:04,904 - #40 ;
INFO  03:18:04,904 - #20 x
INFO  03:18:04,904 - #37 =
INFO  03:18:04,904 - #20 rows
INFO  03:18:04,904 - #40 ;
INFO  03:18:04,904 - #10 while
INFO  03:18:04,904 - #44 (
INFO  03:18:04,904 - #23 true
INFO  03:18:04,904 - #45 )
INFO  03:18:04,904 - #48 {
INFO  03:18:04,904 - #8 if
INFO  03:18:04,904 - #44 (
INFO  03:18:04,904 - #20 x
INFO  03:18:04,904 - #34 <=
INFO  03:18:04,904 - #21 0
INFO  03:18:04,904 - #45 )
INFO  03:18:04,904 - #3 break
INFO  03:18:04,904 - #40 ;
INFO  03:18:04,904 - #8 if
INFO  03:18:04,904 - #44 (
INFO  03:18:04,904 - #21 0
INFO  03:18:04,904 - #34 <=
INFO  03:18:04,904 - #20 x
INFO  03:18:04,904 - #35 &&
INFO  03:18:04,904 - #20 x
INFO  03:18:04,904 - #33 <
INFO  03:18:04,904 - #20 size
INFO  03:18:04,904 - #45 )
INFO  03:18:04,905 - #48 {
INFO  03:18:04,905 - #20 val
INFO  03:18:04,905 - #43 .
INFO  03:18:04,905 - #20 putp
INFO  03:18:04,905 - #44 (
INFO  03:18:04,905 - #20 val
INFO  03:18:04,905 - #43 .
INFO  03:18:04,905 - #20 getp
INFO  03:18:04,905 - #44 (
INFO  03:18:04,905 - #20 x
INFO  03:18:04,905 - #45 )
INFO  03:18:04,905 - #24 +
INFO  03:18:04,905 - #21 1
INFO  03:18:04,905 - #45 )
INFO  03:18:04,905 - #40 ;
INFO  03:18:04,905 - #49 }
INFO  03:18:04,905 - #6 else
INFO  03:18:04,905 - #8 if
INFO  03:18:04,905 - #44 (
INFO  03:18:04,905 - #25 -
INFO  03:18:04,905 - #20 size
INFO  03:18:04,905 - #33 <
INFO  03:18:04,905 - #20 x
INFO  03:18:04,905 - #35 &&
INFO  03:18:04,905 - #20 x
INFO  03:18:04,905 - #33 <
INFO  03:18:04,905 - #21 0
INFO  03:18:04,905 - #45 )
INFO  03:18:04,905 - #48 {
INFO  03:18:04,905 - #20 val
INFO  03:18:04,905 - #43 .
INFO  03:18:04,905 - #20 putn
INFO  03:18:04,905 - #44 (
INFO  03:18:04,905 - #20 val
INFO  03:18:04,905 - #43 .
INFO  03:18:04,905 - #20 getn
INFO  03:18:04,906 - #44 (
INFO  03:18:04,906 - #25 -
INFO  03:18:04,906 - #20 x
INFO  03:18:04,906 - #45 )
INFO  03:18:04,906 - #24 +
INFO  03:18:04,906 - #21 1
INFO  03:18:04,906 - #45 )
INFO  03:18:04,906 - #40 ;
INFO  03:18:04,906 - #49 }
INFO  03:18:04,906 - #13 read
INFO  03:18:04,906 - #44 (
INFO  03:18:04,906 - #20 x
INFO  03:18:04,906 - #45 )
INFO  03:18:04,906 - #40 ;
INFO  03:18:04,906 - #49 }
INFO  03:18:04,906 - #49 }
INFO  03:18:04,906 - #49 }
