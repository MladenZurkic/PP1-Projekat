INFO  16:08:31,841 - Compiling source file: D:\GitHub repos\PP1-Projekat\MJCompiler\test\program.mj
INFO  16:08:31,870 - #2 program
INFO  16:08:31,871 - #17 p
INFO  16:08:31,871 - #6 const
INFO  16:08:31,871 - #17 int
INFO  16:08:31,871 - #17 size
INFO  16:08:31,871 - #31 =
INFO  16:08:31,871 - #47 10
INFO  16:08:31,872 - #34 ;
INFO  16:08:31,872 - #17 int
INFO  16:08:31,872 - #17 size2
INFO  16:08:31,872 - #35 ,
INFO  16:08:31,873 - #17 ass
INFO  16:08:31,873 - #39 [
INFO  16:08:31,873 - #40 ]
INFO  16:08:31,874 - #35 ,
INFO  16:08:31,874 - #17 idegas
INFO  16:08:31,874 - #31 =
ERROR 16:08:31,874 - 
Sintaksna greska na liniji 4
INFO  16:08:31,874 - #35 ,
INFO  16:08:31,874 - #17 odegas
INFO  16:08:31,874 - #34 ;
INFO  16:08:31,875 - #4 class
INFO  16:08:31,875 - #17 Table
INFO  16:08:31,875 - #41 {
INFO  16:08:31,875 - #17 int
INFO  16:08:31,875 - #17 pos
INFO  16:08:31,875 - #39 [
INFO  16:08:31,875 - #40 ]
INFO  16:08:31,875 - #35 ,
INFO  16:08:31,875 - #17 neg
INFO  16:08:31,875 - #39 [
INFO  16:08:31,875 - #40 ]
INFO  16:08:31,875 - #35 ,
INFO  16:08:31,875 - #17 factor
INFO  16:08:31,875 - #34 ;
INFO  16:08:31,875 - #41 {
INFO  16:08:31,876 - #17 Table
INFO  16:08:31,876 - #37 (
INFO  16:08:31,876 - #17 int
INFO  16:08:31,876 - #17 factor
INFO  16:08:31,876 - #38 )
INFO  16:08:31,876 - #41 {
INFO  16:08:31,876 - #17 this
INFO  16:08:31,876 - #36 .
INFO  16:08:31,876 - #17 factor
INFO  16:08:31,876 - #31 =
INFO  16:08:31,876 - #17 factor
INFO  16:08:31,876 - #34 ;
INFO  16:08:31,876 - #42 }
INFO  16:08:31,876 - #13 void
INFO  16:08:31,876 - #17 putp
INFO  16:08:31,876 - #37 (
INFO  16:08:31,876 - #17 int
INFO  16:08:31,876 - #17 a
INFO  16:08:31,877 - #35 ,
INFO  16:08:31,877 - #17 int
INFO  16:08:31,877 - #17 idx
INFO  16:08:31,877 - #38 )
INFO  16:08:31,877 - #41 {
INFO  16:08:31,877 - #17 this
INFO  16:08:31,877 - #36 .
INFO  16:08:31,877 - #17 pos
INFO  16:08:31,877 - #39 [
INFO  16:08:31,877 - #17 idx
INFO  16:08:31,877 - #40 ]
INFO  16:08:31,877 - #31 =
INFO  16:08:31,877 - #17 a
INFO  16:08:31,877 - #17 qq
INFO  16:08:31,877 - #34 ;
INFO  16:08:31,877 - #10 print
INFO  16:08:31,877 - #37 (
INFO  16:08:31,877 - #17 x
INFO  16:08:31,877 - #38 )
INFO  16:08:31,877 - #34 ;
INFO  16:08:31,877 - #42 }
INFO  16:08:31,878 - #13 void
INFO  16:08:31,878 - #17 putn
INFO  16:08:31,878 - #37 (
INFO  16:08:31,878 - #17 int
INFO  16:08:31,878 - #17 a
INFO  16:08:31,878 - #35 ,
INFO  16:08:31,878 - #17 int
INFO  16:08:31,878 - #17 idx
INFO  16:08:31,878 - #38 )
INFO  16:08:31,878 - #41 {
INFO  16:08:31,878 - #17 this
INFO  16:08:31,878 - #36 .
INFO  16:08:31,878 - #17 neg
INFO  16:08:31,878 - #39 [
INFO  16:08:31,878 - #17 idx
INFO  16:08:31,878 - #40 ]
INFO  16:08:31,878 - #31 =
INFO  16:08:31,878 - #17 a
INFO  16:08:31,878 - #34 ;
INFO  16:08:31,879 - #42 }
INFO  16:08:31,879 - #17 int
INFO  16:08:31,879 - #17 getp
INFO  16:08:31,879 - #37 (
INFO  16:08:31,879 - #17 int
INFO  16:08:31,879 - #17 idx
INFO  16:08:31,879 - #38 )
INFO  16:08:31,879 - #41 {
INFO  16:08:31,879 - #12 return
INFO  16:08:31,879 - #17 pos
INFO  16:08:31,879 - #39 [
INFO  16:08:31,879 - #17 idx
INFO  16:08:31,879 - #40 ]
INFO  16:08:31,879 - #34 ;
INFO  16:08:31,879 - #42 }
INFO  16:08:31,879 - #17 int
INFO  16:08:31,879 - #17 getn
INFO  16:08:31,879 - #37 (
INFO  16:08:31,879 - #17 int
INFO  16:08:31,879 - #17 idx
INFO  16:08:31,880 - #38 )
INFO  16:08:31,880 - #41 {
INFO  16:08:31,880 - #12 return
INFO  16:08:31,880 - #17 neg
INFO  16:08:31,880 - #39 [
INFO  16:08:31,880 - #17 idx
INFO  16:08:31,880 - #40 ]
INFO  16:08:31,880 - #34 ;
INFO  16:08:31,880 - #42 }
INFO  16:08:31,880 - #42 }
INFO  16:08:31,880 - #42 }
INFO  16:08:31,880 - #17 Table
INFO  16:08:31,880 - #17 val
INFO  16:08:31,880 - #34 ;
INFO  16:08:31,880 - #17 Int
INFO  16:08:31,880 - #17 rows
INFO  16:08:31,880 - #35 ,
INFO  16:08:31,880 - #17 columns
INFO  16:08:31,880 - #34 ;
INFO  16:08:31,880 - #41 {
INFO  16:08:31,880 - #13 void
INFO  16:08:31,880 - #17 f
INFO  16:08:31,881 - #37 (
INFO  16:08:31,881 - #17 char
INFO  16:08:31,881 - #17 ch
INFO  16:08:31,881 - #35 ,
INFO  16:08:31,881 - #17 int
INFO  16:08:31,881 - #17 a
INFO  16:08:31,881 - #35 ,
INFO  16:08:31,881 - #17 int
INFO  16:08:31,881 - #17 arg
INFO  16:08:31,881 - #38 )
INFO  16:08:31,881 - #17 int
INFO  16:08:31,881 - #17 x
INFO  16:08:31,881 - #34 ;
INFO  16:08:31,881 - #41 {
INFO  16:08:31,881 - #17 x
INFO  16:08:31,881 - #31 =
INFO  16:08:31,881 - #17 arg
INFO  16:08:31,881 - #34 ;
INFO  16:08:31,881 - #10 print
INFO  16:08:31,881 - #37 (
INFO  16:08:31,882 - #17 x
INFO  16:08:31,882 - #38 )
INFO  16:08:31,882 - #34 ;
INFO  16:08:31,882 - #42 }
INFO  16:08:31,882 - #13 void
INFO  16:08:31,882 - #17 main
INFO  16:08:31,882 - #37 (
INFO  16:08:31,882 - #38 )
INFO  16:08:31,882 - #17 int
INFO  16:08:31,882 - #17 x
INFO  16:08:31,882 - #35 ,
INFO  16:08:31,882 - #17 i
INFO  16:08:31,882 - #34 ;
INFO  16:08:31,882 - #17 char
INFO  16:08:31,882 - #17 c
INFO  16:08:31,882 - #34 ;
INFO  16:08:31,882 - #17 int
INFO  16:08:31,882 - #17 arr
INFO  16:08:31,882 - #39 [
INFO  16:08:31,882 - #40 ]
INFO  16:08:31,882 - #34 ;
INFO  16:08:31,882 - #41 {
INFO  16:08:31,882 - #17 val
INFO  16:08:31,883 - #31 =
INFO  16:08:31,883 - #9 new
INFO  16:08:31,883 - #17 Table
INFO  16:08:31,883 - #37 (
INFO  16:08:31,883 - #47 2
INFO  16:08:31,883 - #38 )
INFO  16:08:31,883 - #34 ;
INFO  16:08:31,883 - #17 arr
INFO  16:08:31,883 - #31 =
INFO  16:08:31,883 - #9 new
INFO  16:08:31,883 - #17 int
INFO  16:08:31,883 - #39 [
INFO  16:08:31,883 - #47 3
INFO  16:08:31,883 - #40 ]
INFO  16:08:31,883 - #34 ;
INFO  16:08:31,883 - #17 i
INFO  16:08:31,883 - #31 =
INFO  16:08:31,883 - #47 0
INFO  16:08:31,883 - #34 ;
INFO  16:08:31,883 - #8 while
INFO  16:08:31,883 - #37 (
INFO  16:08:31,883 - #17 i
INFO  16:08:31,884 - #27 <
INFO  16:08:31,884 - #47 3
INFO  16:08:31,884 - #38 )
INFO  16:08:31,884 - #41 {
INFO  16:08:31,884 - #17 arr
INFO  16:08:31,884 - #39 [
INFO  16:08:31,884 - #17 i
INFO  16:08:31,884 - #40 ]
INFO  16:08:31,884 - #31 =
INFO  16:08:31,884 - #17 i
INFO  16:08:31,884 - #34 ;
INFO  16:08:31,884 - #17 i
INFO  16:08:31,884 - #32 ++
INFO  16:08:31,884 - #34 ;
INFO  16:08:31,884 - #42 }
INFO  16:08:31,884 - #17 arr
INFO  16:08:31,884 - #36 .
INFO  16:08:31,884 - #16 foreach
INFO  16:08:31,884 - #37 (
INFO  16:08:31,884 - #17 x
INFO  16:08:31,884 - #43 =>
INFO  16:08:31,884 - #10 print
INFO  16:08:31,884 - #37 (
INFO  16:08:31,884 - #17 x
INFO  16:08:31,884 - #38 )
INFO  16:08:31,885 - #34 ;
INFO  16:08:31,885 - #38 )
INFO  16:08:31,885 - #34 ;
INFO  16:08:31,885 - #17 val
INFO  16:08:31,885 - #36 .
INFO  16:08:31,885 - #17 pos
INFO  16:08:31,885 - #31 =
INFO  16:08:31,885 - #9 new
INFO  16:08:31,885 - #17 int
INFO  16:08:31,885 - #39 [
INFO  16:08:31,885 - #17 size
INFO  16:08:31,885 - #40 ]
INFO  16:08:31,885 - #34 ;
INFO  16:08:31,885 - #17 val
INFO  16:08:31,885 - #36 .
INFO  16:08:31,885 - #17 neg
INFO  16:08:31,885 - #31 =
INFO  16:08:31,885 - #9 new
INFO  16:08:31,885 - #17 int
INFO  16:08:31,885 - #39 [
INFO  16:08:31,885 - #17 size
INFO  16:08:31,885 - #40 ]
INFO  16:08:31,885 - #34 ;
INFO  16:08:31,885 - #11 read
INFO  16:08:31,886 - #37 (
INFO  16:08:31,886 - #17 x
INFO  16:08:31,886 - #38 )
INFO  16:08:31,886 - #34 ;
INFO  16:08:31,886 - #8 while
INFO  16:08:31,886 - #37 (
INFO  16:08:31,886 - #17 i
INFO  16:08:31,886 - #27 <
INFO  16:08:31,886 - #17 size
INFO  16:08:31,886 - #38 )
INFO  16:08:31,886 - #41 {
INFO  16:08:31,886 - #17 val
INFO  16:08:31,886 - #36 .
INFO  16:08:31,886 - #17 putp
INFO  16:08:31,886 - #37 (
INFO  16:08:31,886 - #47 0
INFO  16:08:31,886 - #35 ,
INFO  16:08:31,886 - #17 i
INFO  16:08:31,886 - #38 )
INFO  16:08:31,886 - #34 ;
INFO  16:08:31,886 - #17 val
INFO  16:08:31,886 - #36 .
INFO  16:08:31,887 - #17 putn
INFO  16:08:31,887 - #37 (
INFO  16:08:31,887 - #47 0
INFO  16:08:31,887 - #35 ,
INFO  16:08:31,887 - #17 i
INFO  16:08:31,887 - #38 )
INFO  16:08:31,887 - #34 ;
INFO  16:08:31,887 - #17 i
INFO  16:08:31,887 - #32 ++
INFO  16:08:31,887 - #34 ;
INFO  16:08:31,887 - #42 }
INFO  16:08:31,887 - #17 f
INFO  16:08:31,887 - #37 (
INFO  16:08:31,887 - #17 c
INFO  16:08:31,887 - #35 ,
INFO  16:08:31,887 - #17 x
INFO  16:08:31,887 - #35 ,
INFO  16:08:31,887 - #17 i
INFO  16:08:31,887 - #38 )
INFO  16:08:31,887 - #34 ;
INFO  16:08:31,887 - #11 read
INFO  16:08:31,887 - #37 (
INFO  16:08:31,887 - #17 rows
INFO  16:08:31,887 - #38 )
INFO  16:08:31,887 - #34 ;
INFO  16:08:31,887 - #17 x
INFO  16:08:31,887 - #31 =
INFO  16:08:31,887 - #17 rows
INFO  16:08:31,888 - #34 ;
INFO  16:08:31,888 - #8 while
INFO  16:08:31,888 - #37 (
INFO  16:08:31,888 - #49 true
INFO  16:08:31,888 - #38 )
INFO  16:08:31,888 - #41 {
INFO  16:08:31,888 - #7 if
INFO  16:08:31,888 - #37 (
INFO  16:08:31,888 - #17 x
INFO  16:08:31,888 - #28 <=
INFO  16:08:31,888 - #47 0
INFO  16:08:31,888 - #38 )
INFO  16:08:31,888 - #3 break
INFO  16:08:31,888 - #34 ;
INFO  16:08:31,888 - #7 if
INFO  16:08:31,888 - #37 (
INFO  16:08:31,888 - #47 0
INFO  16:08:31,888 - #28 <=
INFO  16:08:31,888 - #17 x
INFO  16:08:31,888 - #29 &&
INFO  16:08:31,888 - #17 x
INFO  16:08:31,888 - #27 <
INFO  16:08:31,888 - #17 size
INFO  16:08:31,888 - #38 )
INFO  16:08:31,888 - #41 {
INFO  16:08:31,888 - #17 val
INFO  16:08:31,888 - #36 .
INFO  16:08:31,889 - #17 putp
INFO  16:08:31,889 - #37 (
INFO  16:08:31,889 - #17 val
INFO  16:08:31,889 - #36 .
INFO  16:08:31,889 - #17 getp
INFO  16:08:31,889 - #37 (
INFO  16:08:31,889 - #17 x
INFO  16:08:31,889 - #38 )
INFO  16:08:31,889 - #18 +
INFO  16:08:31,889 - #47 1
INFO  16:08:31,889 - #38 )
INFO  16:08:31,889 - #34 ;
INFO  16:08:31,889 - #42 }
INFO  16:08:31,889 - #5 else
INFO  16:08:31,889 - #7 if
INFO  16:08:31,889 - #37 (
INFO  16:08:31,889 - #19 -
INFO  16:08:31,889 - #17 size
INFO  16:08:31,889 - #27 <
INFO  16:08:31,889 - #17 x
INFO  16:08:31,889 - #29 &&
INFO  16:08:31,889 - #17 x
INFO  16:08:31,889 - #27 <
INFO  16:08:31,889 - #47 0
INFO  16:08:31,889 - #38 )
INFO  16:08:31,889 - #41 {
INFO  16:08:31,889 - #17 val
INFO  16:08:31,889 - #36 .
INFO  16:08:31,889 - #17 putn
INFO  16:08:31,889 - #37 (
INFO  16:08:31,889 - #17 val
INFO  16:08:31,890 - #36 .
INFO  16:08:31,890 - #17 getn
INFO  16:08:31,890 - #37 (
INFO  16:08:31,890 - #19 -
INFO  16:08:31,890 - #17 x
INFO  16:08:31,890 - #38 )
INFO  16:08:31,890 - #18 +
INFO  16:08:31,890 - #47 1
INFO  16:08:31,890 - #38 )
INFO  16:08:31,890 - #34 ;
INFO  16:08:31,890 - #42 }
INFO  16:08:31,890 - #11 read
INFO  16:08:31,890 - #37 (
INFO  16:08:31,890 - #17 x
INFO  16:08:31,890 - #38 )
INFO  16:08:31,890 - #34 ;
INFO  16:08:31,890 - #42 }
INFO  16:08:31,890 - #42 }
INFO  16:08:31,890 - #42 }
ERROR 16:08:31,890 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62
