INFO  16:14:02,121 - Compiling source file: D:\GitHub repos\PP1-Projekat\MJCompiler\test\program.mj
INFO  16:14:02,151 - #2 program
INFO  16:14:02,151 - #17 p
INFO  16:14:02,152 - #6 const
INFO  16:14:02,152 - #17 int
INFO  16:14:02,152 - #17 size
INFO  16:14:02,152 - #31 =
INFO  16:14:02,152 - #47 10
INFO  16:14:02,152 - #34 ;
INFO  16:14:02,153 - #6 const
INFO  16:14:02,153 - #17 int
INFO  16:14:02,153 - #17 size3
INFO  16:14:02,153 - #35 ,
ERROR 16:14:02,153 - 
Sintaksna greska na liniji 4
INFO  16:14:02,154 - #17 int
INFO  16:14:02,154 - #17 size2
INFO  16:14:02,154 - #31 =
INFO  16:14:02,154 - #47 12
INFO  16:14:02,154 - #34 ;
INFO  16:14:02,154 - #17 int
INFO  16:14:02,155 - #17 size2
INFO  16:14:02,155 - #35 ,
INFO  16:14:02,155 - #17 ass
INFO  16:14:02,155 - #34 ;
INFO  16:14:02,155 - #4 class
INFO  16:14:02,155 - #17 Table
INFO  16:14:02,155 - #41 {
INFO  16:14:02,155 - #17 int
INFO  16:14:02,155 - #17 pos
INFO  16:14:02,155 - #39 [
INFO  16:14:02,155 - #40 ]
INFO  16:14:02,155 - #35 ,
INFO  16:14:02,155 - #17 neg
INFO  16:14:02,155 - #39 [
INFO  16:14:02,156 - #40 ]
INFO  16:14:02,156 - #35 ,
INFO  16:14:02,156 - #17 factor
INFO  16:14:02,156 - #34 ;
INFO  16:14:02,156 - #41 {
INFO  16:14:02,156 - #17 Table
INFO  16:14:02,156 - #37 (
INFO  16:14:02,156 - #17 int
INFO  16:14:02,156 - #17 factor
INFO  16:14:02,156 - #38 )
INFO  16:14:02,156 - #41 {
INFO  16:14:02,156 - #17 this
INFO  16:14:02,156 - #36 .
INFO  16:14:02,156 - #17 factor
INFO  16:14:02,156 - #31 =
INFO  16:14:02,156 - #17 factor
INFO  16:14:02,156 - #34 ;
INFO  16:14:02,157 - #42 }
INFO  16:14:02,157 - #13 void
INFO  16:14:02,157 - #17 putp
INFO  16:14:02,157 - #37 (
INFO  16:14:02,157 - #17 int
INFO  16:14:02,157 - #17 a
INFO  16:14:02,157 - #35 ,
INFO  16:14:02,157 - #17 int
INFO  16:14:02,157 - #17 idx
INFO  16:14:02,157 - #38 )
INFO  16:14:02,157 - #41 {
INFO  16:14:02,157 - #17 this
INFO  16:14:02,157 - #36 .
INFO  16:14:02,157 - #17 pos
INFO  16:14:02,157 - #39 [
INFO  16:14:02,157 - #17 idx
INFO  16:14:02,157 - #40 ]
INFO  16:14:02,157 - #31 =
INFO  16:14:02,157 - #17 a
INFO  16:14:02,158 - #17 qq
INFO  16:14:02,158 - #34 ;
INFO  16:14:02,158 - #10 print
INFO  16:14:02,158 - #37 (
INFO  16:14:02,158 - #17 x
INFO  16:14:02,158 - #38 )
INFO  16:14:02,158 - #34 ;
INFO  16:14:02,158 - #42 }
INFO  16:14:02,158 - #13 void
INFO  16:14:02,158 - #17 putn
INFO  16:14:02,158 - #37 (
INFO  16:14:02,158 - #17 int
INFO  16:14:02,158 - #17 a
INFO  16:14:02,158 - #35 ,
INFO  16:14:02,158 - #17 int
INFO  16:14:02,158 - #17 idx
INFO  16:14:02,158 - #38 )
INFO  16:14:02,158 - #41 {
INFO  16:14:02,158 - #17 this
INFO  16:14:02,158 - #36 .
INFO  16:14:02,158 - #17 neg
INFO  16:14:02,159 - #39 [
INFO  16:14:02,159 - #17 idx
INFO  16:14:02,159 - #40 ]
INFO  16:14:02,159 - #31 =
INFO  16:14:02,159 - #17 a
INFO  16:14:02,159 - #34 ;
INFO  16:14:02,159 - #42 }
INFO  16:14:02,159 - #17 int
INFO  16:14:02,159 - #17 getp
INFO  16:14:02,159 - #37 (
INFO  16:14:02,159 - #17 int
INFO  16:14:02,159 - #17 idx
INFO  16:14:02,159 - #38 )
INFO  16:14:02,159 - #41 {
INFO  16:14:02,159 - #12 return
INFO  16:14:02,159 - #17 pos
INFO  16:14:02,159 - #39 [
INFO  16:14:02,159 - #17 idx
INFO  16:14:02,159 - #40 ]
INFO  16:14:02,159 - #34 ;
INFO  16:14:02,159 - #42 }
INFO  16:14:02,159 - #17 int
INFO  16:14:02,159 - #17 getn
INFO  16:14:02,160 - #37 (
INFO  16:14:02,160 - #17 int
INFO  16:14:02,160 - #17 idx
INFO  16:14:02,160 - #38 )
INFO  16:14:02,160 - #41 {
INFO  16:14:02,160 - #12 return
INFO  16:14:02,160 - #17 neg
INFO  16:14:02,160 - #39 [
INFO  16:14:02,160 - #17 idx
INFO  16:14:02,160 - #40 ]
INFO  16:14:02,160 - #34 ;
INFO  16:14:02,160 - #42 }
INFO  16:14:02,160 - #42 }
INFO  16:14:02,160 - #42 }
INFO  16:14:02,160 - #17 Table
INFO  16:14:02,160 - #17 val
INFO  16:14:02,160 - #34 ;
INFO  16:14:02,160 - #17 Int
INFO  16:14:02,160 - #17 rows
INFO  16:14:02,160 - #35 ,
INFO  16:14:02,160 - #17 columns
INFO  16:14:02,161 - #34 ;
INFO  16:14:02,161 - #41 {
INFO  16:14:02,161 - #13 void
INFO  16:14:02,161 - #17 f
INFO  16:14:02,161 - #37 (
INFO  16:14:02,161 - #17 char
INFO  16:14:02,161 - #17 ch
INFO  16:14:02,161 - #35 ,
INFO  16:14:02,161 - #17 int
INFO  16:14:02,161 - #17 a
INFO  16:14:02,161 - #35 ,
INFO  16:14:02,161 - #17 int
INFO  16:14:02,161 - #17 arg
INFO  16:14:02,161 - #38 )
INFO  16:14:02,161 - #17 int
INFO  16:14:02,161 - #17 x
INFO  16:14:02,161 - #34 ;
INFO  16:14:02,161 - #41 {
INFO  16:14:02,161 - #17 x
INFO  16:14:02,161 - #31 =
INFO  16:14:02,161 - #17 arg
INFO  16:14:02,161 - #34 ;
INFO  16:14:02,162 - #10 print
INFO  16:14:02,162 - #37 (
INFO  16:14:02,162 - #17 x
INFO  16:14:02,162 - #38 )
INFO  16:14:02,162 - #34 ;
INFO  16:14:02,162 - #42 }
INFO  16:14:02,162 - #13 void
INFO  16:14:02,162 - #17 main
INFO  16:14:02,162 - #37 (
INFO  16:14:02,162 - #38 )
INFO  16:14:02,162 - #17 int
INFO  16:14:02,162 - #17 x
INFO  16:14:02,162 - #35 ,
INFO  16:14:02,162 - #17 i
INFO  16:14:02,162 - #34 ;
INFO  16:14:02,162 - #17 char
INFO  16:14:02,162 - #17 c
INFO  16:14:02,162 - #34 ;
INFO  16:14:02,162 - #17 int
INFO  16:14:02,162 - #17 arr
INFO  16:14:02,162 - #39 [
INFO  16:14:02,162 - #40 ]
INFO  16:14:02,162 - #34 ;
INFO  16:14:02,163 - #41 {
INFO  16:14:02,163 - #17 val
INFO  16:14:02,163 - #31 =
INFO  16:14:02,163 - #9 new
INFO  16:14:02,163 - #17 Table
INFO  16:14:02,163 - #37 (
INFO  16:14:02,163 - #47 2
INFO  16:14:02,163 - #38 )
INFO  16:14:02,163 - #34 ;
INFO  16:14:02,163 - #17 arr
INFO  16:14:02,163 - #31 =
INFO  16:14:02,163 - #9 new
INFO  16:14:02,163 - #17 int
INFO  16:14:02,163 - #39 [
INFO  16:14:02,163 - #47 3
INFO  16:14:02,163 - #40 ]
INFO  16:14:02,163 - #34 ;
INFO  16:14:02,163 - #17 i
INFO  16:14:02,163 - #31 =
INFO  16:14:02,163 - #47 0
INFO  16:14:02,163 - #34 ;
INFO  16:14:02,163 - #8 while
INFO  16:14:02,163 - #37 (
INFO  16:14:02,164 - #17 i
INFO  16:14:02,164 - #27 <
INFO  16:14:02,164 - #47 3
INFO  16:14:02,164 - #38 )
INFO  16:14:02,164 - #41 {
INFO  16:14:02,164 - #17 arr
INFO  16:14:02,164 - #39 [
INFO  16:14:02,164 - #17 i
INFO  16:14:02,164 - #40 ]
INFO  16:14:02,164 - #31 =
INFO  16:14:02,164 - #17 i
INFO  16:14:02,164 - #34 ;
INFO  16:14:02,164 - #17 i
INFO  16:14:02,164 - #32 ++
INFO  16:14:02,164 - #34 ;
INFO  16:14:02,164 - #42 }
INFO  16:14:02,164 - #17 arr
INFO  16:14:02,164 - #36 .
INFO  16:14:02,164 - #16 foreach
INFO  16:14:02,164 - #37 (
INFO  16:14:02,164 - #17 x
INFO  16:14:02,164 - #43 =>
INFO  16:14:02,164 - #10 print
INFO  16:14:02,164 - #37 (
INFO  16:14:02,164 - #17 x
INFO  16:14:02,165 - #38 )
INFO  16:14:02,165 - #34 ;
INFO  16:14:02,165 - #38 )
INFO  16:14:02,165 - #34 ;
INFO  16:14:02,165 - #17 val
INFO  16:14:02,165 - #36 .
INFO  16:14:02,165 - #17 pos
INFO  16:14:02,165 - #31 =
INFO  16:14:02,165 - #9 new
INFO  16:14:02,165 - #17 int
INFO  16:14:02,165 - #39 [
INFO  16:14:02,165 - #17 size
INFO  16:14:02,165 - #40 ]
INFO  16:14:02,165 - #34 ;
INFO  16:14:02,165 - #17 val
INFO  16:14:02,165 - #36 .
INFO  16:14:02,165 - #17 neg
INFO  16:14:02,165 - #31 =
INFO  16:14:02,165 - #9 new
INFO  16:14:02,165 - #17 int
INFO  16:14:02,165 - #39 [
INFO  16:14:02,165 - #17 size
INFO  16:14:02,165 - #40 ]
INFO  16:14:02,166 - #34 ;
INFO  16:14:02,166 - #11 read
INFO  16:14:02,166 - #37 (
INFO  16:14:02,166 - #17 x
INFO  16:14:02,166 - #38 )
INFO  16:14:02,166 - #34 ;
INFO  16:14:02,166 - #8 while
INFO  16:14:02,166 - #37 (
INFO  16:14:02,166 - #17 i
INFO  16:14:02,166 - #27 <
INFO  16:14:02,166 - #17 size
INFO  16:14:02,166 - #38 )
INFO  16:14:02,166 - #41 {
INFO  16:14:02,166 - #17 val
INFO  16:14:02,166 - #36 .
INFO  16:14:02,166 - #17 putp
INFO  16:14:02,166 - #37 (
INFO  16:14:02,166 - #47 0
INFO  16:14:02,166 - #35 ,
INFO  16:14:02,166 - #17 i
INFO  16:14:02,166 - #38 )
INFO  16:14:02,166 - #34 ;
INFO  16:14:02,167 - #17 val
INFO  16:14:02,167 - #36 .
INFO  16:14:02,167 - #17 putn
INFO  16:14:02,167 - #37 (
INFO  16:14:02,167 - #47 0
INFO  16:14:02,167 - #35 ,
INFO  16:14:02,167 - #17 i
INFO  16:14:02,167 - #38 )
INFO  16:14:02,167 - #34 ;
INFO  16:14:02,167 - #17 i
INFO  16:14:02,167 - #32 ++
INFO  16:14:02,167 - #34 ;
INFO  16:14:02,167 - #42 }
INFO  16:14:02,167 - #17 f
INFO  16:14:02,167 - #37 (
INFO  16:14:02,167 - #17 c
INFO  16:14:02,167 - #35 ,
INFO  16:14:02,167 - #17 x
INFO  16:14:02,167 - #35 ,
INFO  16:14:02,167 - #17 i
INFO  16:14:02,167 - #38 )
INFO  16:14:02,167 - #34 ;
INFO  16:14:02,167 - #11 read
INFO  16:14:02,167 - #37 (
INFO  16:14:02,167 - #17 rows
INFO  16:14:02,167 - #38 )
INFO  16:14:02,167 - #34 ;
INFO  16:14:02,167 - #17 x
INFO  16:14:02,168 - #31 =
INFO  16:14:02,168 - #17 rows
INFO  16:14:02,168 - #34 ;
INFO  16:14:02,168 - #8 while
INFO  16:14:02,168 - #37 (
INFO  16:14:02,168 - #49 true
INFO  16:14:02,168 - #38 )
INFO  16:14:02,168 - #41 {
INFO  16:14:02,168 - #7 if
INFO  16:14:02,168 - #37 (
INFO  16:14:02,168 - #17 x
INFO  16:14:02,168 - #28 <=
INFO  16:14:02,168 - #47 0
INFO  16:14:02,168 - #38 )
INFO  16:14:02,168 - #3 break
INFO  16:14:02,168 - #34 ;
INFO  16:14:02,168 - #7 if
INFO  16:14:02,168 - #37 (
INFO  16:14:02,168 - #47 0
INFO  16:14:02,168 - #28 <=
INFO  16:14:02,168 - #17 x
INFO  16:14:02,168 - #29 &&
INFO  16:14:02,168 - #17 x
INFO  16:14:02,168 - #27 <
INFO  16:14:02,168 - #17 size
INFO  16:14:02,168 - #38 )
INFO  16:14:02,168 - #41 {
INFO  16:14:02,168 - #17 val
INFO  16:14:02,169 - #36 .
INFO  16:14:02,169 - #17 putp
INFO  16:14:02,169 - #37 (
INFO  16:14:02,169 - #17 val
INFO  16:14:02,169 - #36 .
INFO  16:14:02,169 - #17 getp
INFO  16:14:02,169 - #37 (
INFO  16:14:02,169 - #17 x
INFO  16:14:02,169 - #38 )
INFO  16:14:02,169 - #18 +
INFO  16:14:02,169 - #47 1
INFO  16:14:02,169 - #38 )
INFO  16:14:02,169 - #34 ;
INFO  16:14:02,169 - #42 }
INFO  16:14:02,169 - #5 else
INFO  16:14:02,169 - #7 if
INFO  16:14:02,169 - #37 (
INFO  16:14:02,169 - #19 -
INFO  16:14:02,169 - #17 size
INFO  16:14:02,169 - #27 <
INFO  16:14:02,169 - #17 x
INFO  16:14:02,169 - #29 &&
INFO  16:14:02,169 - #17 x
INFO  16:14:02,169 - #27 <
INFO  16:14:02,169 - #47 0
INFO  16:14:02,169 - #38 )
INFO  16:14:02,169 - #41 {
INFO  16:14:02,169 - #17 val
INFO  16:14:02,169 - #36 .
INFO  16:14:02,169 - #17 putn
INFO  16:14:02,169 - #37 (
INFO  16:14:02,170 - #17 val
INFO  16:14:02,170 - #36 .
INFO  16:14:02,170 - #17 getn
INFO  16:14:02,170 - #37 (
INFO  16:14:02,170 - #19 -
INFO  16:14:02,170 - #17 x
INFO  16:14:02,170 - #38 )
INFO  16:14:02,170 - #18 +
INFO  16:14:02,170 - #47 1
INFO  16:14:02,170 - #38 )
INFO  16:14:02,170 - #34 ;
INFO  16:14:02,170 - #42 }
INFO  16:14:02,170 - #11 read
INFO  16:14:02,170 - #37 (
INFO  16:14:02,170 - #17 x
INFO  16:14:02,170 - #38 )
INFO  16:14:02,170 - #34 ;
INFO  16:14:02,170 - #42 }
INFO  16:14:02,170 - #42 }
INFO  16:14:02,170 - #42 }
ERROR 16:14:02,170 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
