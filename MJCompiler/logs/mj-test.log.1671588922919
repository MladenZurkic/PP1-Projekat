INFO  03:14:02,456 - Compiling source file: D:\GitHub repos\PP1-Projekat\MJCompiler\test\program.mj
INFO  03:14:02,459 - #2 program
INFO  03:14:02,459 - #20 p
INFO  03:14:02,459 - #7 const
INFO  03:14:02,459 - #20 int
INFO  03:14:02,460 - #20 size
INFO  03:14:02,460 - #37 =
INFO  03:14:02,460 - #21 10
INFO  03:14:02,460 - #40 ;
INFO  03:14:02,460 - #4 class
INFO  03:14:02,460 - #20 Table
INFO  03:14:02,460 - #48 {
INFO  03:14:02,460 - #20 int
INFO  03:14:02,460 - #20 pos
INFO  03:14:02,460 - #46 [
INFO  03:14:02,460 - #47 ]
INFO  03:14:02,460 - #42 ,
INFO  03:14:02,460 - #20 neg
INFO  03:14:02,460 - #46 [
INFO  03:14:02,460 - #47 ]
INFO  03:14:02,460 - #42 ,
INFO  03:14:02,461 - #20 factor
INFO  03:14:02,461 - #40 ;
INFO  03:14:02,461 - #48 {
INFO  03:14:02,461 - #20 Table
INFO  03:14:02,461 - #44 (
INFO  03:14:02,461 - #20 int
INFO  03:14:02,461 - #20 factor
INFO  03:14:02,461 - #45 )
INFO  03:14:02,461 - #48 {
INFO  03:14:02,461 - #18 this
INFO  03:14:02,461 - #43 .
INFO  03:14:02,461 - #20 factor
INFO  03:14:02,461 - #37 =
INFO  03:14:02,461 - #20 factor
INFO  03:14:02,461 - #40 ;
INFO  03:14:02,462 - #49 }
INFO  03:14:02,462 - #15 void
INFO  03:14:02,462 - #20 putp
INFO  03:14:02,462 - #44 (
INFO  03:14:02,462 - #20 int
INFO  03:14:02,462 - #20 a
INFO  03:14:02,462 - #42 ,
INFO  03:14:02,462 - #20 int
INFO  03:14:02,462 - #20 idx
INFO  03:14:02,462 - #45 )
INFO  03:14:02,462 - #48 {
INFO  03:14:02,462 - #18 this
INFO  03:14:02,462 - #43 .
INFO  03:14:02,462 - #20 pos
INFO  03:14:02,462 - #46 [
INFO  03:14:02,462 - #20 idx
INFO  03:14:02,462 - #47 ]
INFO  03:14:02,462 - #37 =
INFO  03:14:02,462 - #20 a
INFO  03:14:02,462 - #40 ;
INFO  03:14:02,462 - #49 }
INFO  03:14:02,463 - #15 void
INFO  03:14:02,463 - #20 putn
INFO  03:14:02,463 - #44 (
INFO  03:14:02,463 - #20 int
INFO  03:14:02,463 - #20 a
INFO  03:14:02,463 - #42 ,
INFO  03:14:02,463 - #20 int
INFO  03:14:02,463 - #20 idx
INFO  03:14:02,463 - #45 )
INFO  03:14:02,463 - #48 {
INFO  03:14:02,463 - #18 this
INFO  03:14:02,463 - #43 .
INFO  03:14:02,463 - #20 neg
INFO  03:14:02,463 - #46 [
INFO  03:14:02,463 - #20 idx
INFO  03:14:02,463 - #47 ]
INFO  03:14:02,463 - #37 =
INFO  03:14:02,463 - #20 a
INFO  03:14:02,463 - #40 ;
INFO  03:14:02,463 - #49 }
INFO  03:14:02,463 - #20 int
INFO  03:14:02,463 - #20 getp
INFO  03:14:02,464 - #44 (
INFO  03:14:02,464 - #20 int
INFO  03:14:02,464 - #20 idx
INFO  03:14:02,464 - #45 )
INFO  03:14:02,464 - #48 {
INFO  03:14:02,464 - #14 return
INFO  03:14:02,464 - #20 pos
INFO  03:14:02,464 - #46 [
INFO  03:14:02,464 - #20 idx
INFO  03:14:02,464 - #47 ]
INFO  03:14:02,464 - #40 ;
INFO  03:14:02,464 - #49 }
INFO  03:14:02,464 - #20 int
INFO  03:14:02,464 - #20 getn
INFO  03:14:02,464 - #44 (
INFO  03:14:02,464 - #20 int
INFO  03:14:02,464 - #20 idx
INFO  03:14:02,464 - #45 )
INFO  03:14:02,464 - #48 {
INFO  03:14:02,464 - #14 return
INFO  03:14:02,464 - #20 neg
INFO  03:14:02,464 - #46 [
INFO  03:14:02,464 - #20 idx
INFO  03:14:02,465 - #47 ]
INFO  03:14:02,465 - #40 ;
INFO  03:14:02,465 - #49 }
INFO  03:14:02,465 - #49 }
INFO  03:14:02,465 - #49 }
INFO  03:14:02,465 - #20 Table
INFO  03:14:02,465 - #20 val
INFO  03:14:02,465 - #40 ;
INFO  03:14:02,465 - #20 Int
INFO  03:14:02,465 - #20 rows
INFO  03:14:02,465 - #42 ,
INFO  03:14:02,465 - #20 columns
INFO  03:14:02,465 - #40 ;
INFO  03:14:02,465 - #48 {
INFO  03:14:02,465 - #15 void
INFO  03:14:02,465 - #20 f
INFO  03:14:02,465 - #44 (
INFO  03:14:02,465 - #20 char
INFO  03:14:02,465 - #20 ch
INFO  03:14:02,465 - #42 ,
INFO  03:14:02,465 - #20 int
INFO  03:14:02,465 - #20 a
INFO  03:14:02,466 - #42 ,
INFO  03:14:02,466 - #20 int
INFO  03:14:02,466 - #20 arg
INFO  03:14:02,466 - #45 )
INFO  03:14:02,466 - #20 int
INFO  03:14:02,466 - #20 x
INFO  03:14:02,466 - #40 ;
INFO  03:14:02,466 - #48 {
INFO  03:14:02,466 - #20 x
INFO  03:14:02,466 - #37 =
INFO  03:14:02,466 - #20 arg
INFO  03:14:02,466 - #40 ;
INFO  03:14:02,466 - #49 }
INFO  03:14:02,466 - #15 void
INFO  03:14:02,466 - #20 main
INFO  03:14:02,466 - #44 (
INFO  03:14:02,466 - #45 )
INFO  03:14:02,466 - #20 int
INFO  03:14:02,466 - #20 x
INFO  03:14:02,466 - #42 ,
INFO  03:14:02,467 - #20 i
INFO  03:14:02,467 - #40 ;
INFO  03:14:02,467 - #20 char
INFO  03:14:02,467 - #20 c
INFO  03:14:02,467 - #42 ,
INFO  03:14:02,467 - #20 int
INFO  03:14:02,467 - #20 arr
INFO  03:14:02,467 - #46 [
INFO  03:14:02,467 - #47 ]
INFO  03:14:02,467 - #40 ;
INFO  03:14:02,467 - #48 {
INFO  03:14:02,467 - #20 val
INFO  03:14:02,467 - #37 =
INFO  03:14:02,467 - #11 new
INFO  03:14:02,467 - #20 Table
INFO  03:14:02,467 - #44 (
INFO  03:14:02,467 - #21 2
INFO  03:14:02,467 - #45 )
INFO  03:14:02,467 - #40 ;
INFO  03:14:02,467 - #20 arr
INFO  03:14:02,467 - #37 =
INFO  03:14:02,467 - #11 new
INFO  03:14:02,468 - #20 int
INFO  03:14:02,468 - #46 [
INFO  03:14:02,468 - #21 3
INFO  03:14:02,468 - #47 ]
INFO  03:14:02,468 - #40 ;
INFO  03:14:02,468 - #20 i
INFO  03:14:02,468 - #37 =
INFO  03:14:02,468 - #21 0
INFO  03:14:02,468 - #40 ;
INFO  03:14:02,468 - #10 while
INFO  03:14:02,468 - #44 (
INFO  03:14:02,468 - #20 i
INFO  03:14:02,468 - #33 <
INFO  03:14:02,468 - #21 3
INFO  03:14:02,468 - #45 )
INFO  03:14:02,468 - #48 {
INFO  03:14:02,468 - #20 arr
INFO  03:14:02,468 - #46 [
INFO  03:14:02,468 - #20 i
INFO  03:14:02,469 - #47 ]
INFO  03:14:02,469 - #37 =
INFO  03:14:02,469 - #20 i
INFO  03:14:02,469 - #40 ;
INFO  03:14:02,469 - #20 i
INFO  03:14:02,469 - #38 ++
INFO  03:14:02,469 - #40 ;
INFO  03:14:02,469 - #49 }
INFO  03:14:02,469 - #20 arr
INFO  03:14:02,469 - #43 .
INFO  03:14:02,469 - #19 foreach
INFO  03:14:02,469 - #44 (
INFO  03:14:02,469 - #20 x
INFO  03:14:02,469 - #50 =>
INFO  03:14:02,469 - #12 print
INFO  03:14:02,469 - #44 (
INFO  03:14:02,469 - #20 x
INFO  03:14:02,469 - #45 )
INFO  03:14:02,469 - #40 ;
INFO  03:14:02,469 - #45 )
INFO  03:14:02,469 - #40 ;
INFO  03:14:02,469 - #20 val
INFO  03:14:02,469 - #43 .
INFO  03:14:02,469 - #20 pos
INFO  03:14:02,469 - #37 =
INFO  03:14:02,470 - #11 new
INFO  03:14:02,470 - #20 int
INFO  03:14:02,470 - #46 [
INFO  03:14:02,470 - #20 size
INFO  03:14:02,470 - #47 ]
INFO  03:14:02,470 - #40 ;
INFO  03:14:02,470 - #20 val
INFO  03:14:02,470 - #43 .
INFO  03:14:02,470 - #20 neg
INFO  03:14:02,470 - #37 =
INFO  03:14:02,470 - #11 new
INFO  03:14:02,470 - #20 int
INFO  03:14:02,470 - #46 [
INFO  03:14:02,470 - #20 size
INFO  03:14:02,470 - #47 ]
INFO  03:14:02,470 - #40 ;
INFO  03:14:02,470 - #13 read
INFO  03:14:02,470 - #44 (
INFO  03:14:02,470 - #20 x
INFO  03:14:02,470 - #45 )
INFO  03:14:02,470 - #40 ;
INFO  03:14:02,470 - #46 [
INFO  03:14:02,470 - #20 i
INFO  03:14:02,471 - #42 ,
INFO  03:14:02,471 - #42 ,
INFO  03:14:02,471 - #20 x
INFO  03:14:02,471 - #47 ]
INFO  03:14:02,471 - #37 =
INFO  03:14:02,471 - #20 arr
INFO  03:14:02,471 - #40 ;
INFO  03:14:02,471 - #10 while
INFO  03:14:02,471 - #44 (
INFO  03:14:02,471 - #20 i
INFO  03:14:02,471 - #33 <
INFO  03:14:02,471 - #20 size
INFO  03:14:02,471 - #45 )
INFO  03:14:02,471 - #48 {
INFO  03:14:02,471 - #20 val
INFO  03:14:02,471 - #43 .
INFO  03:14:02,471 - #20 putp
INFO  03:14:02,471 - #44 (
INFO  03:14:02,471 - #21 0
INFO  03:14:02,471 - #42 ,
INFO  03:14:02,471 - #20 i
INFO  03:14:02,471 - #45 )
INFO  03:14:02,471 - #40 ;
INFO  03:14:02,471 - #20 val
INFO  03:14:02,472 - #43 .
INFO  03:14:02,472 - #20 putn
INFO  03:14:02,472 - #44 (
INFO  03:14:02,472 - #21 0
INFO  03:14:02,472 - #42 ,
INFO  03:14:02,472 - #20 i
INFO  03:14:02,472 - #45 )
INFO  03:14:02,472 - #40 ;
INFO  03:14:02,472 - #20 i
INFO  03:14:02,472 - #38 ++
INFO  03:14:02,472 - #40 ;
INFO  03:14:02,472 - #49 }
INFO  03:14:02,472 - #20 f
INFO  03:14:02,472 - #44 (
INFO  03:14:02,472 - #20 c
INFO  03:14:02,472 - #42 ,
INFO  03:14:02,472 - #20 x
INFO  03:14:02,472 - #42 ,
INFO  03:14:02,472 - #20 i
INFO  03:14:02,472 - #45 )
INFO  03:14:02,472 - #40 ;
INFO  03:14:02,472 - #13 read
INFO  03:14:02,472 - #44 (
INFO  03:14:02,472 - #20 rows
INFO  03:14:02,472 - #45 )
INFO  03:14:02,472 - #40 ;
INFO  03:14:02,473 - #20 x
INFO  03:14:02,473 - #37 =
INFO  03:14:02,473 - #20 rows
INFO  03:14:02,473 - #40 ;
INFO  03:14:02,473 - #10 while
INFO  03:14:02,473 - #44 (
INFO  03:14:02,473 - #23 true
INFO  03:14:02,473 - #45 )
INFO  03:14:02,473 - #48 {
INFO  03:14:02,473 - #8 if
INFO  03:14:02,473 - #44 (
INFO  03:14:02,473 - #20 x
INFO  03:14:02,473 - #34 <=
INFO  03:14:02,473 - #21 0
INFO  03:14:02,473 - #45 )
INFO  03:14:02,473 - #3 break
INFO  03:14:02,473 - #40 ;
INFO  03:14:02,473 - #8 if
INFO  03:14:02,473 - #44 (
INFO  03:14:02,473 - #21 0
INFO  03:14:02,473 - #34 <=
INFO  03:14:02,473 - #20 x
INFO  03:14:02,473 - #35 &&
INFO  03:14:02,473 - #20 x
INFO  03:14:02,473 - #33 <
INFO  03:14:02,473 - #20 size
INFO  03:14:02,473 - #45 )
INFO  03:14:02,473 - #48 {
INFO  03:14:02,473 - #20 val
INFO  03:14:02,473 - #43 .
INFO  03:14:02,474 - #20 putp
INFO  03:14:02,474 - #44 (
INFO  03:14:02,474 - #20 val
INFO  03:14:02,474 - #43 .
INFO  03:14:02,474 - #20 getp
INFO  03:14:02,474 - #44 (
INFO  03:14:02,474 - #20 x
INFO  03:14:02,474 - #45 )
INFO  03:14:02,474 - #24 +
INFO  03:14:02,474 - #21 1
INFO  03:14:02,474 - #45 )
INFO  03:14:02,474 - #40 ;
INFO  03:14:02,474 - #49 }
INFO  03:14:02,474 - #6 else
INFO  03:14:02,474 - #8 if
INFO  03:14:02,474 - #44 (
INFO  03:14:02,474 - #20 size
INFO  03:14:02,474 - #33 <
INFO  03:14:02,474 - #20 x
INFO  03:14:02,474 - #35 &&
INFO  03:14:02,474 - #20 x
INFO  03:14:02,474 - #33 <
INFO  03:14:02,475 - #21 0
INFO  03:14:02,475 - #45 )
INFO  03:14:02,475 - #48 {
INFO  03:14:02,475 - #20 val
INFO  03:14:02,475 - #43 .
INFO  03:14:02,475 - #20 putn
INFO  03:14:02,475 - #44 (
INFO  03:14:02,475 - #20 val
INFO  03:14:02,475 - #43 .
INFO  03:14:02,475 - #20 getn
INFO  03:14:02,475 - #44 (
INFO  03:14:02,475 - #20 x
INFO  03:14:02,475 - #45 )
INFO  03:14:02,475 - #24 +
INFO  03:14:02,475 - #21 1
INFO  03:14:02,475 - #45 )
INFO  03:14:02,475 - #40 ;
INFO  03:14:02,475 - #49 }
INFO  03:14:02,475 - #13 read
INFO  03:14:02,475 - #44 (
INFO  03:14:02,475 - #20 x
INFO  03:14:02,475 - #45 )
INFO  03:14:02,475 - #40 ;
INFO  03:14:02,475 - #49 }
INFO  03:14:02,475 - #49 }
INFO  03:14:02,475 - #49 }
