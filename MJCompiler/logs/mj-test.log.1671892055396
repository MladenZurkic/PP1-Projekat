INFO  15:26:28,240 - Compiling source file: D:\GitHub repos\PP1-Projekat\MJCompiler\test\program.mj
INFO  15:26:28,269 - #2 program
INFO  15:26:28,269 - #17 p
INFO  15:26:28,269 - #6 const
INFO  15:26:28,269 - #17 int
INFO  15:26:28,269 - #17 size
INFO  15:26:28,270 - #34 =
INFO  15:26:28,270 - #18 10
INFO  15:26:28,270 - #38 ,
INFO  15:26:28,270 - #17 size2
INFO  15:26:28,270 - #34 =
INFO  15:26:28,271 - #38 ,
ERROR 15:26:28,271 - 
Sintaksna greska na liniji 3
INFO  15:26:28,271 - #17 size4
INFO  15:26:28,271 - #37 ;
INFO  15:26:28,271 - #17 int
INFO  15:26:28,271 - #17 size2
INFO  15:26:28,271 - #38 ,
INFO  15:26:28,271 - #17 ass
INFO  15:26:28,271 - #37 ;
INFO  15:26:28,272 - #4 class
INFO  15:26:28,272 - #17 Table
INFO  15:26:28,272 - #44 {
INFO  15:26:28,272 - #17 int
INFO  15:26:28,272 - #17 pos
INFO  15:26:28,272 - #42 [
INFO  15:26:28,272 - #43 ]
INFO  15:26:28,272 - #38 ,
INFO  15:26:28,272 - #17 neg
INFO  15:26:28,272 - #42 [
INFO  15:26:28,272 - #43 ]
INFO  15:26:28,272 - #38 ,
INFO  15:26:28,272 - #17 factor
INFO  15:26:28,272 - #37 ;
INFO  15:26:28,273 - #44 {
INFO  15:26:28,273 - #17 Table
INFO  15:26:28,273 - #40 (
INFO  15:26:28,273 - #17 int
INFO  15:26:28,273 - #17 factor
INFO  15:26:28,273 - #41 )
INFO  15:26:28,273 - #44 {
INFO  15:26:28,273 - #17 this
INFO  15:26:28,273 - #39 .
INFO  15:26:28,273 - #17 factor
INFO  15:26:28,273 - #34 =
INFO  15:26:28,273 - #17 factor
INFO  15:26:28,273 - #37 ;
INFO  15:26:28,273 - #45 }
INFO  15:26:28,273 - #13 void
INFO  15:26:28,273 - #17 putp
INFO  15:26:28,273 - #40 (
INFO  15:26:28,273 - #17 int
INFO  15:26:28,273 - #17 a
INFO  15:26:28,274 - #38 ,
INFO  15:26:28,274 - #17 int
INFO  15:26:28,274 - #17 idx
INFO  15:26:28,274 - #41 )
INFO  15:26:28,274 - #44 {
INFO  15:26:28,274 - #17 this
INFO  15:26:28,274 - #39 .
INFO  15:26:28,274 - #17 pos
INFO  15:26:28,274 - #42 [
INFO  15:26:28,274 - #17 idx
INFO  15:26:28,274 - #43 ]
INFO  15:26:28,274 - #34 =
INFO  15:26:28,274 - #17 a
INFO  15:26:28,274 - #17 qq
INFO  15:26:28,274 - #37 ;
INFO  15:26:28,274 - #45 }
INFO  15:26:28,274 - #13 void
INFO  15:26:28,275 - #17 putn
INFO  15:26:28,275 - #40 (
INFO  15:26:28,275 - #17 int
INFO  15:26:28,275 - #17 a
INFO  15:26:28,275 - #38 ,
INFO  15:26:28,275 - #17 int
INFO  15:26:28,275 - #17 idx
INFO  15:26:28,275 - #41 )
INFO  15:26:28,275 - #44 {
INFO  15:26:28,275 - #17 this
INFO  15:26:28,275 - #39 .
INFO  15:26:28,275 - #17 neg
INFO  15:26:28,275 - #42 [
INFO  15:26:28,275 - #17 idx
INFO  15:26:28,275 - #43 ]
INFO  15:26:28,275 - #34 =
INFO  15:26:28,275 - #17 a
INFO  15:26:28,275 - #37 ;
INFO  15:26:28,276 - #45 }
INFO  15:26:28,276 - #17 int
INFO  15:26:28,276 - #17 getp
INFO  15:26:28,276 - #40 (
INFO  15:26:28,276 - #17 int
INFO  15:26:28,276 - #17 idx
INFO  15:26:28,276 - #41 )
INFO  15:26:28,276 - #44 {
INFO  15:26:28,276 - #12 return
INFO  15:26:28,276 - #17 pos
INFO  15:26:28,276 - #42 [
INFO  15:26:28,276 - #17 idx
INFO  15:26:28,276 - #43 ]
INFO  15:26:28,276 - #37 ;
INFO  15:26:28,276 - #45 }
INFO  15:26:28,276 - #17 int
INFO  15:26:28,276 - #17 getn
INFO  15:26:28,276 - #40 (
INFO  15:26:28,276 - #17 int
INFO  15:26:28,276 - #17 idx
INFO  15:26:28,276 - #41 )
INFO  15:26:28,276 - #44 {
INFO  15:26:28,277 - #12 return
INFO  15:26:28,277 - #17 neg
INFO  15:26:28,277 - #42 [
INFO  15:26:28,277 - #17 idx
INFO  15:26:28,277 - #43 ]
INFO  15:26:28,277 - #37 ;
INFO  15:26:28,277 - #45 }
INFO  15:26:28,277 - #45 }
INFO  15:26:28,277 - #45 }
INFO  15:26:28,277 - #17 Table
INFO  15:26:28,277 - #17 val
INFO  15:26:28,277 - #37 ;
INFO  15:26:28,277 - #17 Int
INFO  15:26:28,277 - #17 rows
INFO  15:26:28,277 - #38 ,
INFO  15:26:28,277 - #17 columns
INFO  15:26:28,277 - #37 ;
INFO  15:26:28,277 - #44 {
INFO  15:26:28,277 - #13 void
INFO  15:26:28,277 - #17 f
INFO  15:26:28,278 - #40 (
INFO  15:26:28,278 - #17 char
INFO  15:26:28,278 - #17 ch
INFO  15:26:28,278 - #38 ,
INFO  15:26:28,278 - #17 int
INFO  15:26:28,278 - #17 a
INFO  15:26:28,278 - #38 ,
INFO  15:26:28,278 - #17 int
INFO  15:26:28,278 - #17 arg
INFO  15:26:28,278 - #41 )
INFO  15:26:28,278 - #17 int
INFO  15:26:28,278 - #17 x
INFO  15:26:28,278 - #37 ;
INFO  15:26:28,278 - #44 {
INFO  15:26:28,278 - #17 x
INFO  15:26:28,278 - #34 =
INFO  15:26:28,278 - #17 arg
INFO  15:26:28,278 - #37 ;
INFO  15:26:28,278 - #10 print
INFO  15:26:28,278 - #40 (
INFO  15:26:28,278 - #17 x
INFO  15:26:28,279 - #41 )
INFO  15:26:28,279 - #37 ;
INFO  15:26:28,279 - #45 }
INFO  15:26:28,279 - #13 void
INFO  15:26:28,279 - #17 main
INFO  15:26:28,279 - #40 (
INFO  15:26:28,279 - #41 )
INFO  15:26:28,279 - #17 int
INFO  15:26:28,279 - #17 x
INFO  15:26:28,279 - #38 ,
INFO  15:26:28,279 - #17 i
INFO  15:26:28,279 - #37 ;
INFO  15:26:28,279 - #17 char
INFO  15:26:28,279 - #17 c
INFO  15:26:28,279 - #37 ;
INFO  15:26:28,279 - #17 int
INFO  15:26:28,279 - #17 arr
INFO  15:26:28,279 - #42 [
INFO  15:26:28,279 - #43 ]
INFO  15:26:28,279 - #37 ;
INFO  15:26:28,279 - #44 {
INFO  15:26:28,280 - #17 val
INFO  15:26:28,280 - #34 =
INFO  15:26:28,280 - #9 new
INFO  15:26:28,280 - #17 Table
INFO  15:26:28,280 - #40 (
INFO  15:26:28,280 - #18 2
INFO  15:26:28,280 - #41 )
INFO  15:26:28,280 - #37 ;
INFO  15:26:28,280 - #17 arr
INFO  15:26:28,280 - #34 =
INFO  15:26:28,280 - #9 new
INFO  15:26:28,280 - #17 int
INFO  15:26:28,280 - #42 [
INFO  15:26:28,280 - #18 3
INFO  15:26:28,280 - #43 ]
INFO  15:26:28,280 - #37 ;
INFO  15:26:28,280 - #17 i
INFO  15:26:28,280 - #34 =
INFO  15:26:28,280 - #18 0
INFO  15:26:28,280 - #37 ;
INFO  15:26:28,280 - #8 while
INFO  15:26:28,281 - #40 (
INFO  15:26:28,281 - #17 i
INFO  15:26:28,281 - #30 <
INFO  15:26:28,281 - #18 3
INFO  15:26:28,281 - #41 )
INFO  15:26:28,281 - #44 {
INFO  15:26:28,281 - #17 arr
INFO  15:26:28,281 - #42 [
INFO  15:26:28,281 - #17 i
INFO  15:26:28,281 - #43 ]
INFO  15:26:28,281 - #34 =
INFO  15:26:28,281 - #17 i
INFO  15:26:28,281 - #37 ;
INFO  15:26:28,281 - #17 i
INFO  15:26:28,281 - #35 ++
INFO  15:26:28,281 - #37 ;
INFO  15:26:28,281 - #45 }
INFO  15:26:28,281 - #17 arr
INFO  15:26:28,281 - #39 .
INFO  15:26:28,281 - #16 foreach
INFO  15:26:28,281 - #40 (
INFO  15:26:28,281 - #17 x
INFO  15:26:28,281 - #46 =>
INFO  15:26:28,281 - #10 print
INFO  15:26:28,282 - #40 (
INFO  15:26:28,282 - #17 x
INFO  15:26:28,282 - #41 )
INFO  15:26:28,282 - #37 ;
INFO  15:26:28,282 - #41 )
INFO  15:26:28,282 - #37 ;
INFO  15:26:28,282 - #17 val
INFO  15:26:28,282 - #39 .
INFO  15:26:28,282 - #17 pos
INFO  15:26:28,282 - #34 =
INFO  15:26:28,282 - #9 new
INFO  15:26:28,282 - #17 int
INFO  15:26:28,282 - #42 [
INFO  15:26:28,282 - #17 size
INFO  15:26:28,282 - #43 ]
INFO  15:26:28,282 - #37 ;
INFO  15:26:28,282 - #17 val
INFO  15:26:28,282 - #39 .
INFO  15:26:28,282 - #17 neg
INFO  15:26:28,282 - #34 =
INFO  15:26:28,282 - #9 new
INFO  15:26:28,282 - #17 int
INFO  15:26:28,282 - #42 [
INFO  15:26:28,282 - #17 size
INFO  15:26:28,283 - #43 ]
INFO  15:26:28,283 - #37 ;
INFO  15:26:28,283 - #11 read
INFO  15:26:28,283 - #40 (
INFO  15:26:28,283 - #17 x
INFO  15:26:28,283 - #41 )
INFO  15:26:28,283 - #37 ;
INFO  15:26:28,283 - #42 [
INFO  15:26:28,283 - #17 i
INFO  15:26:28,283 - #38 ,
INFO  15:26:28,283 - #38 ,
INFO  15:26:28,283 - #17 x
INFO  15:26:28,283 - #43 ]
ERROR 15:26:28,283 - Izvrsen oporavak do , (ConstsList) u liniji 3
ERROR 15:26:28,284 - 
Sintaksna greska na liniji 37
INFO  15:26:28,284 - #34 =
INFO  15:26:28,284 - #17 arr
INFO  15:26:28,284 - #37 ;
INFO  15:26:28,284 - #8 while
INFO  15:26:28,284 - #40 (
INFO  15:26:28,284 - #17 i
INFO  15:26:28,284 - #30 <
INFO  15:26:28,284 - #17 size
INFO  15:26:28,284 - #41 )
INFO  15:26:28,284 - #44 {
INFO  15:26:28,284 - #17 val
INFO  15:26:28,284 - #39 .
INFO  15:26:28,284 - #17 putp
INFO  15:26:28,284 - #40 (
INFO  15:26:28,284 - #18 0
INFO  15:26:28,284 - #38 ,
INFO  15:26:28,284 - #17 i
INFO  15:26:28,285 - #41 )
INFO  15:26:28,285 - #37 ;
INFO  15:26:28,285 - #17 val
INFO  15:26:28,285 - #39 .
INFO  15:26:28,285 - #17 putn
INFO  15:26:28,285 - #40 (
INFO  15:26:28,285 - #18 0
INFO  15:26:28,285 - #38 ,
INFO  15:26:28,285 - #17 i
INFO  15:26:28,285 - #41 )
INFO  15:26:28,285 - #37 ;
INFO  15:26:28,285 - #17 i
INFO  15:26:28,285 - #35 ++
INFO  15:26:28,285 - #37 ;
INFO  15:26:28,285 - #45 }
INFO  15:26:28,285 - #17 f
INFO  15:26:28,285 - #40 (
INFO  15:26:28,285 - #17 c
INFO  15:26:28,285 - #38 ,
INFO  15:26:28,285 - #17 x
INFO  15:26:28,285 - #38 ,
INFO  15:26:28,285 - #17 i
INFO  15:26:28,285 - #41 )
INFO  15:26:28,285 - #37 ;
INFO  15:26:28,285 - #11 read
INFO  15:26:28,285 - #40 (
INFO  15:26:28,285 - #17 rows
INFO  15:26:28,285 - #41 )
INFO  15:26:28,285 - #37 ;
INFO  15:26:28,285 - #17 x
INFO  15:26:28,286 - #34 =
INFO  15:26:28,286 - #17 rows
INFO  15:26:28,286 - #37 ;
INFO  15:26:28,286 - #8 while
INFO  15:26:28,286 - #40 (
INFO  15:26:28,286 - #20 true
INFO  15:26:28,286 - #41 )
INFO  15:26:28,286 - #44 {
INFO  15:26:28,286 - #7 if
INFO  15:26:28,286 - #40 (
INFO  15:26:28,286 - #17 x
INFO  15:26:28,286 - #31 <=
INFO  15:26:28,286 - #18 0
INFO  15:26:28,286 - #41 )
INFO  15:26:28,286 - #3 break
INFO  15:26:28,286 - #37 ;
INFO  15:26:28,286 - #7 if
INFO  15:26:28,286 - #40 (
INFO  15:26:28,286 - #18 0
INFO  15:26:28,286 - #31 <=
INFO  15:26:28,286 - #17 x
INFO  15:26:28,286 - #32 &&
INFO  15:26:28,286 - #17 x
INFO  15:26:28,286 - #30 <
INFO  15:26:28,286 - #17 size
INFO  15:26:28,287 - #41 )
INFO  15:26:28,287 - #44 {
INFO  15:26:28,287 - #17 val
INFO  15:26:28,287 - #39 .
INFO  15:26:28,287 - #17 putp
INFO  15:26:28,287 - #40 (
INFO  15:26:28,287 - #17 val
INFO  15:26:28,287 - #39 .
INFO  15:26:28,287 - #17 getp
INFO  15:26:28,287 - #40 (
INFO  15:26:28,287 - #17 x
INFO  15:26:28,287 - #41 )
INFO  15:26:28,287 - #21 +
INFO  15:26:28,287 - #18 1
INFO  15:26:28,287 - #41 )
INFO  15:26:28,287 - #37 ;
INFO  15:26:28,287 - #45 }
INFO  15:26:28,287 - #5 else
INFO  15:26:28,287 - #7 if
INFO  15:26:28,287 - #40 (
INFO  15:26:28,287 - #22 -
INFO  15:26:28,287 - #17 size
INFO  15:26:28,287 - #30 <
INFO  15:26:28,287 - #17 x
INFO  15:26:28,287 - #32 &&
INFO  15:26:28,287 - #17 x
INFO  15:26:28,287 - #30 <
INFO  15:26:28,287 - #18 0
INFO  15:26:28,287 - #41 )
INFO  15:26:28,287 - #44 {
INFO  15:26:28,287 - #17 val
INFO  15:26:28,287 - #39 .
INFO  15:26:28,287 - #17 putn
INFO  15:26:28,287 - #40 (
INFO  15:26:28,287 - #17 val
INFO  15:26:28,287 - #39 .
INFO  15:26:28,287 - #17 getn
INFO  15:26:28,288 - #40 (
INFO  15:26:28,288 - #22 -
INFO  15:26:28,288 - #17 x
INFO  15:26:28,288 - #41 )
INFO  15:26:28,288 - #21 +
INFO  15:26:28,288 - #18 1
INFO  15:26:28,288 - #41 )
INFO  15:26:28,288 - #37 ;
INFO  15:26:28,288 - #45 }
INFO  15:26:28,288 - #11 read
INFO  15:26:28,288 - #40 (
INFO  15:26:28,288 - #17 x
INFO  15:26:28,288 - #41 )
INFO  15:26:28,288 - #37 ;
INFO  15:26:28,288 - #45 }
INFO  15:26:28,288 - #45 }
INFO  15:26:28,288 - #45 }
ERROR 15:26:28,288 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62
