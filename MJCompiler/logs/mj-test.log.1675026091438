INFO  21:58:53,248 - Compiling source file: D:\GitHub repos\PP1-Projekat\MJCompiler\test\program.mj
INFO  21:58:53,280 - #2 program
INFO  21:58:53,280 - #46 ord
INFO  21:58:53,280 - #46 int
INFO  21:58:53,281 - #46 a
INFO  21:58:53,281 - #37 ;
INFO  21:58:53,282 - #6 const
INFO  21:58:53,283 - #46 int
INFO  21:58:53,283 - #46 b
INFO  21:58:53,283 - #34 =
INFO  21:58:53,283 - #47 10
INFO  21:58:53,283 - #37 ;
INFO  21:58:53,283 - #6 const
INFO  21:58:53,284 - #46 char
INFO  21:58:53,284 - #46 b
INFO  21:58:53,284 - #34 =
INFO  21:58:53,284 - #47 1
INFO  21:58:53,284 - #38 ,
INFO  21:58:53,284 - #46 c
INFO  21:58:53,284 - #34 =
INFO  21:58:53,285 - #48 c
INFO  21:58:53,285 - #37 ;
INFO  21:58:53,285 - #46 int
INFO  21:58:53,285 - #46 d
INFO  21:58:53,285 - #38 ,
INFO  21:58:53,285 - #46 e
INFO  21:58:53,286 - #42 [
INFO  21:58:53,286 - #24 ]
INFO  21:58:53,286 - #37 ;
INFO  21:58:53,286 - #6 const
INFO  21:58:53,286 - #46 bool
INFO  21:58:53,286 - #46 g
INFO  21:58:53,286 - #34 =
INFO  21:58:53,286 - #49 true
INFO  21:58:53,286 - #38 ,
INFO  21:58:53,286 - #46 h
INFO  21:58:53,286 - #34 =
INFO  21:58:53,286 - #49 false
INFO  21:58:53,286 - #37 ;
INFO  21:58:53,286 - #6 const
INFO  21:58:53,286 - #46 char
INFO  21:58:53,286 - #46 i
INFO  21:58:53,287 - #34 =
INFO  21:58:53,287 - #48 c
INFO  21:58:53,287 - #37 ;
INFO  21:58:53,287 - #4 class
INFO  21:58:53,287 - #46 Lol
INFO  21:58:53,287 - #25 {
INFO  21:58:53,288 - #25 {
INFO  21:58:53,288 - #46 char
INFO  21:58:53,288 - #46 ord
INFO  21:58:53,288 - #40 (
INFO  21:58:53,288 - #46 char
INFO  21:58:53,288 - #46 chr
INFO  21:58:53,288 - #41 )
INFO  21:58:53,289 - #25 {
INFO  21:58:53,289 - #12 return
INFO  21:58:53,289 - #48 a
INFO  21:58:53,289 - #37 ;
INFO  21:58:53,289 - #26 }
INFO  21:58:53,290 - #26 }
INFO  21:58:53,290 - #26 }
INFO  21:58:53,290 - #4 class
INFO  21:58:53,291 - #46 Lol2
INFO  21:58:53,291 - #14 extends
INFO  21:58:53,291 - #46 Lol
INFO  21:58:53,291 - #25 {
INFO  21:58:53,291 - #46 int
INFO  21:58:53,291 - #46 a
INFO  21:58:53,291 - #38 ,
INFO  21:58:53,292 - #46 b
INFO  21:58:53,293 - #37 ;
INFO  21:58:53,293 - #26 }
INFO  21:58:53,293 - #4 class
INFO  21:58:53,294 - #46 Lol4
INFO  21:58:53,294 - #14 extends
INFO  21:58:53,294 - #46 Lol3
INFO  21:58:53,294 - #25 {
INFO  21:58:53,294 - #46 int
INFO  21:58:53,294 - #46 c
INFO  21:58:53,294 - #37 ;
INFO  21:58:53,294 - #25 {
INFO  21:58:53,294 - #13 void
INFO  21:58:53,294 - #46 bb
INFO  21:58:53,294 - #40 (
INFO  21:58:53,294 - #46 int
INFO  21:58:53,294 - #46 c
INFO  21:58:53,294 - #41 )
INFO  21:58:53,294 - #25 {
INFO  21:58:53,295 - #12 return
INFO  21:58:53,295 - #47 1
INFO  21:58:53,295 - #37 ;
INFO  21:58:53,295 - #26 }
INFO  21:58:53,295 - #26 }
INFO  21:58:53,295 - #26 }
INFO  21:58:53,295 - #4 class
INFO  21:58:53,295 - #46 Lol3
INFO  21:58:53,295 - #14 extends
INFO  21:58:53,295 - #46 Lol2
INFO  21:58:53,295 - #25 {
INFO  21:58:53,295 - #46 int
INFO  21:58:53,295 - #46 a
INFO  21:58:53,295 - #37 ;
INFO  21:58:53,295 - #46 int
INFO  21:58:53,295 - #46 c
INFO  21:58:53,295 - #38 ,
INFO  21:58:53,295 - #46 d
INFO  21:58:53,295 - #37 ;
INFO  21:58:53,296 - #25 {
INFO  21:58:53,296 - #46 a
INFO  21:58:53,296 - #46 aa
INFO  21:58:53,296 - #40 (
INFO  21:58:53,296 - #41 )
INFO  21:58:53,296 - #25 {
INFO  21:58:53,296 - #26 }
INFO  21:58:53,296 - #13 void
INFO  21:58:53,296 - #46 a
INFO  21:58:53,296 - #40 (
INFO  21:58:53,296 - #46 Lol
INFO  21:58:53,296 - #46 x
INFO  21:58:53,296 - #38 ,
INFO  21:58:53,296 - #46 int
INFO  21:58:53,297 - #46 x
INFO  21:58:53,297 - #41 )
INFO  21:58:53,297 - #46 Lol2
INFO  21:58:53,297 - #46 x
INFO  21:58:53,297 - #37 ;
INFO  21:58:53,297 - #25 {
INFO  21:58:53,297 - #10 print
INFO  21:58:53,297 - #40 (
INFO  21:58:53,297 - #46 x
INFO  21:58:53,297 - #41 )
INFO  21:58:53,298 - #37 ;
INFO  21:58:53,298 - #26 }
INFO  21:58:53,298 - #13 void
INFO  21:58:53,298 - #46 f
INFO  21:58:53,298 - #40 (
INFO  21:58:53,298 - #41 )
INFO  21:58:53,298 - #46 Lol
INFO  21:58:53,298 - #46 c
INFO  21:58:53,298 - #42 [
INFO  21:58:53,298 - #24 ]
INFO  21:58:53,298 - #37 ;
INFO  21:58:53,298 - #46 char
INFO  21:58:53,298 - #46 c2
INFO  21:58:53,298 - #37 ;
INFO  21:58:53,298 - #25 {
INFO  21:58:53,298 - #46 this
INFO  21:58:53,298 - #39 .
INFO  21:58:53,298 - #46 a
INFO  21:58:53,298 - #40 (
INFO  21:58:53,299 - #41 )
INFO  21:58:53,299 - #37 ;
INFO  21:58:53,299 - #46 a
INFO  21:58:53,299 - #34 =
INFO  21:58:53,299 - #47 1
INFO  21:58:53,300 - #37 ;
INFO  21:58:53,300 - #46 ord
INFO  21:58:53,300 - #40 (
INFO  21:58:53,300 - #46 a
INFO  21:58:53,300 - #41 )
INFO  21:58:53,300 - #37 ;
INFO  21:58:53,300 - #46 c2
INFO  21:58:53,300 - #34 =
INFO  21:58:53,300 - #46 ord
INFO  21:58:53,300 - #40 (
INFO  21:58:53,300 - #46 c2
INFO  21:58:53,300 - #41 )
INFO  21:58:53,301 - #37 ;
INFO  21:58:53,301 - #46 a
INFO  21:58:53,301 - #35 ++
INFO  21:58:53,301 - #37 ;
INFO  21:58:53,301 - #46 a
INFO  21:58:53,301 - #36 --
INFO  21:58:53,301 - #37 ;
INFO  21:58:53,301 - #42 [
INFO  21:58:53,301 - #38 ,
INFO  21:58:53,301 - #46 a
INFO  21:58:53,301 - #38 ,
INFO  21:58:53,302 - #46 b
INFO  21:58:53,302 - #38 ,
INFO  21:58:53,302 - #24 ]
INFO  21:58:53,302 - #34 =
INFO  21:58:53,302 - #46 e
INFO  21:58:53,302 - #37 ;
INFO  21:58:53,302 - #46 a
INFO  21:58:53,302 - #34 =
INFO  21:58:53,302 - #46 b
INFO  21:58:53,302 - #19 *
INFO  21:58:53,302 - #46 c
INFO  21:58:53,303 - #17 +
INFO  21:58:53,303 - #40 (
INFO  21:58:53,303 - #18 -
INFO  21:58:53,304 - #47 1
INFO  21:58:53,304 - #41 )
INFO  21:58:53,304 - #18 -
INFO  21:58:53,304 - #47 2
INFO  21:58:53,304 - #20 /
INFO  21:58:53,304 - #47 4
INFO  21:58:53,304 - #21 %
INFO  21:58:53,304 - #46 d
INFO  21:58:53,305 - #37 ;
INFO  21:58:53,305 - #46 b
INFO  21:58:53,305 - #34 =
INFO  21:58:53,305 - #9 new
INFO  21:58:53,305 - #46 Lol
INFO  21:58:53,305 - #40 (
INFO  21:58:53,305 - #47 1
INFO  21:58:53,305 - #38 ,
INFO  21:58:53,305 - #46 f
INFO  21:58:53,305 - #40 (
INFO  21:58:53,305 - #41 )
INFO  21:58:53,305 - #38 ,
INFO  21:58:53,305 - #47 2
INFO  21:58:53,305 - #41 )
INFO  21:58:53,305 - #37 ;
INFO  21:58:53,306 - #46 c
INFO  21:58:53,306 - #34 =
INFO  21:58:53,306 - #9 new
INFO  21:58:53,306 - #46 Lol2
INFO  21:58:53,306 - #42 [
INFO  21:58:53,306 - #46 a
INFO  21:58:53,306 - #24 ]
INFO  21:58:53,306 - #37 ;
INFO  21:58:53,306 - #46 c
INFO  21:58:53,306 - #34 =
INFO  21:58:53,306 - #9 new
INFO  21:58:53,306 - #46 Lol2
INFO  21:58:53,306 - #42 [
INFO  21:58:53,306 - #46 c2
INFO  21:58:53,306 - #24 ]
INFO  21:58:53,306 - #37 ;
INFO  21:58:53,306 - #46 a
INFO  21:58:53,306 - #34 =
INFO  21:58:53,306 - #9 new
INFO  21:58:53,306 - #46 int
INFO  21:58:53,306 - #40 (
INFO  21:58:53,306 - #41 )
INFO  21:58:53,306 - #37 ;
INFO  21:58:53,307 - #7 if
INFO  21:58:53,307 - #40 (
INFO  21:58:53,307 - #46 a
INFO  21:58:53,307 - #41 )
INFO  21:58:53,308 - #25 {
INFO  21:58:53,308 - #7 if
INFO  21:58:53,308 - #40 (
INFO  21:58:53,308 - #46 g
INFO  21:58:53,308 - #33 ||
INFO  21:58:53,308 - #46 a
INFO  21:58:53,309 - #32 &&
INFO  21:58:53,309 - #46 c
INFO  21:58:53,309 - #42 [
INFO  21:58:53,309 - #47 0
INFO  21:58:53,309 - #24 ]
INFO  21:58:53,309 - #30 <
INFO  21:58:53,309 - #46 c
INFO  21:58:53,310 - #42 [
INFO  21:58:53,310 - #47 1
INFO  21:58:53,310 - #24 ]
INFO  21:58:53,310 - #41 )
INFO  21:58:53,310 - #25 {
INFO  21:58:53,310 - #26 }
INFO  21:58:53,310 - #3 break
INFO  21:58:53,311 - #37 ;
INFO  21:58:53,311 - #26 }
INFO  21:58:53,311 - #26 }
INFO  21:58:53,311 - #26 }
INFO  21:58:53,311 - #26 }
INFO  21:58:53,311 - #25 {
INFO  21:58:53,311 - #13 void
INFO  21:58:53,312 - #46 lol
INFO  21:58:53,312 - #40 (
INFO  21:58:53,312 - #41 )
INFO  21:58:53,312 - #25 {
INFO  21:58:53,312 - #26 }
INFO  21:58:53,312 - #46 Lol
INFO  21:58:53,312 - #46 lol2
INFO  21:58:53,312 - #40 (
INFO  21:58:53,312 - #46 int
INFO  21:58:53,312 - #46 a
INFO  21:58:53,312 - #41 )
INFO  21:58:53,312 - #46 int
INFO  21:58:53,312 - #46 b
INFO  21:58:53,312 - #38 ,
INFO  21:58:53,312 - #46 c
INFO  21:58:53,312 - #42 [
INFO  21:58:53,313 - #24 ]
INFO  21:58:53,313 - #37 ;
INFO  21:58:53,313 - #25 {
INFO  21:58:53,313 - #26 }
INFO  21:58:53,313 - #26 }
INFO  21:58:53,318 - Program(
  ProgName(
   ord
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    Declarations(
                      NoDeclarations(
                      ) [NoDeclarations]
                      DeclsVarDecl(
                        GlobalVarDecl(
                          Type(
                           int
                          ) [Type]
                          GlobalVarDeclListEnd(
                            VarDeclEndDef(
                              GlobalVarDeclIdent(
                               a
                                NoAngleBrackets(
                                ) [NoAngleBrackets]
                              ) [GlobalVarDeclIdent]
                            ) [VarDeclEndDef]
                          ) [GlobalVarDeclListEnd]
                        ) [GlobalVarDecl]
                      ) [DeclsVarDecl]
                    ) [Declarations]
                    DeclsConstDecl(
                      ConstDecl(
                        Type(
                         int
                        ) [Type]
                        ConstsListSingle(
                          ConstsListElem(
                           b
                            NumberConst(
                             10
                            ) [NumberConst]
                          ) [ConstsListElem]
                        ) [ConstsListSingle]
                      ) [ConstDecl]
                    ) [DeclsConstDecl]
                  ) [Declarations]
                  DeclsConstDecl(
                    ConstDecl(
                      Type(
                       char
                      ) [Type]
                      ConstsLists(
                        ConstsListSingle(
                          ConstsListElem(
                           b
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [ConstsListElem]
                        ) [ConstsListSingle]
                        ConstsListElem(
                         c
                          CharConst(
                           c
                          ) [CharConst]
                        ) [ConstsListElem]
                      ) [ConstsLists]
                    ) [ConstDecl]
                  ) [DeclsConstDecl]
                ) [Declarations]
                DeclsVarDecl(
                  GlobalVarDecl(
                    Type(
                     int
                    ) [Type]
                    GlobalVarDeclLists(
                      VarDeclCommaDef(
                        GlobalVarDeclIdent(
                         d
                          NoAngleBrackets(
                          ) [NoAngleBrackets]
                        ) [GlobalVarDeclIdent]
                      ) [VarDeclCommaDef]
                      GlobalVarDeclListEnd(
                        VarDeclEndDef(
                          GlobalVarDeclIdent(
                           e
                            AngleBrackets(
                            ) [AngleBrackets]
                          ) [GlobalVarDeclIdent]
                        ) [VarDeclEndDef]
                      ) [GlobalVarDeclListEnd]
                    ) [GlobalVarDeclLists]
                  ) [GlobalVarDecl]
                ) [DeclsVarDecl]
              ) [Declarations]
              DeclsConstDecl(
                ConstDecl(
                  Type(
                   bool
                  ) [Type]
                  ConstsLists(
                    ConstsListSingle(
                      ConstsListElem(
                       g
                        BoolConst(
                         true
                        ) [BoolConst]
                      ) [ConstsListElem]
                    ) [ConstsListSingle]
                    ConstsListElem(
                     h
                      BoolConst(
                       false
                      ) [BoolConst]
                    ) [ConstsListElem]
                  ) [ConstsLists]
                ) [ConstDecl]
              ) [DeclsConstDecl]
            ) [Declarations]
            DeclsConstDecl(
              ConstDecl(
                Type(
                 char
                ) [Type]
                ConstsListSingle(
                  ConstsListElem(
                   i
                    CharConst(
                     c
                    ) [CharConst]
                  ) [ConstsListElem]
                ) [ConstsListSingle]
              ) [ConstDecl]
            ) [DeclsConstDecl]
          ) [Declarations]
          DeclsClassDecl(
            ClassDecl(
              ClassDeclName(
               Lol
              ) [ClassDeclName]
              NoExtendsOptional(
              ) [NoExtendsOptional]
              NoVarDeclList(
              ) [NoVarDeclList]
              ClassConstrMethodDecOnlyMethod(
                ClassMethodDeclListSingle(
                  MethodDecl(
                    MethodTypeName(
                      TypeOrVoidType(
                        Type(
                         char
                        ) [Type]
                      ) [TypeOrVoidType]
                     ord
                    ) [MethodTypeName]
                    FormParsOptionalPars(
                      FormParsListEnd(
                        FormParsEndWithRPAREN(
                          FormParsIdentNoBrackets(
                            Type(
                             char
                            ) [Type]
                           chr
                          ) [FormParsIdentNoBrackets]
                        ) [FormParsEndWithRPAREN]
                      ) [FormParsListEnd]
                    ) [FormParsOptionalPars]
                    NoVarDeclList(
                    ) [NoVarDeclList]
                    StatementListDef(
                      NoStatementList(
                      ) [NoStatementList]
                      ReturnExpr(
                        ExprTerm(
                          TermFactor(
                            FactorChar(
                             a
                            ) [FactorChar]
                          ) [TermFactor]
                        ) [ExprTerm]
                      ) [ReturnExpr]
                    ) [StatementListDef]
                  ) [MethodDecl]
                ) [ClassMethodDeclListSingle]
              ) [ClassConstrMethodDecOnlyMethod]
            ) [ClassDecl]
          ) [DeclsClassDecl]
        ) [Declarations]
        DeclsClassDecl(
          ClassDecl(
            ClassDeclName(
             Lol2
            ) [ClassDeclName]
            ExtendsOptionalDef(
              Type(
               Lol
              ) [Type]
            ) [ExtendsOptionalDef]
            VarDeclLists(
              NoVarDeclList(
              ) [NoVarDeclList]
              VarDecl(
                Type(
                 int
                ) [Type]
                VarDeclIdent(
                 a
                  NoAngleBrackets(
                  ) [NoAngleBrackets]
                ) [VarDeclIdent]
                MoreVarDeclsDef(
                  NoMoreVarDecls(
                  ) [NoMoreVarDecls]
                  VarDeclIdent(
                   b
                    NoAngleBrackets(
                    ) [NoAngleBrackets]
                  ) [VarDeclIdent]
                ) [MoreVarDeclsDef]
              ) [VarDecl]
            ) [VarDeclLists]
            NoClassConstrMethodDecl(
            ) [NoClassConstrMethodDecl]
          ) [ClassDecl]
        ) [DeclsClassDecl]
      ) [Declarations]
      DeclsClassDecl(
        ClassDecl(
          ClassDeclName(
           Lol4
          ) [ClassDeclName]
          ExtendsOptionalDef(
            Type(
             Lol3
            ) [Type]
          ) [ExtendsOptionalDef]
          VarDeclLists(
            NoVarDeclList(
            ) [NoVarDeclList]
            VarDecl(
              Type(
               int
              ) [Type]
              VarDeclIdent(
               c
                NoAngleBrackets(
                ) [NoAngleBrackets]
              ) [VarDeclIdent]
              NoMoreVarDecls(
              ) [NoMoreVarDecls]
            ) [VarDecl]
          ) [VarDeclLists]
          ClassConstrMethodDecOnlyMethod(
            ClassMethodDeclListSingle(
              MethodDecl(
                MethodTypeName(
                  TypeOrVoidVoid(
                  ) [TypeOrVoidVoid]
                 bb
                ) [MethodTypeName]
                FormParsOptionalPars(
                  FormParsListEnd(
                    FormParsEndWithRPAREN(
                      FormParsIdentNoBrackets(
                        Type(
                         int
                        ) [Type]
                       c
                      ) [FormParsIdentNoBrackets]
                    ) [FormParsEndWithRPAREN]
                  ) [FormParsListEnd]
                ) [FormParsOptionalPars]
                NoVarDeclList(
                ) [NoVarDeclList]
                StatementListDef(
                  NoStatementList(
                  ) [NoStatementList]
                  ReturnExpr(
                    ExprTerm(
                      TermFactor(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermFactor]
                    ) [ExprTerm]
                  ) [ReturnExpr]
                ) [StatementListDef]
              ) [MethodDecl]
            ) [ClassMethodDeclListSingle]
          ) [ClassConstrMethodDecOnlyMethod]
        ) [ClassDecl]
      ) [DeclsClassDecl]
    ) [Declarations]
    DeclsClassDecl(
      ClassDecl(
        ClassDeclName(
         Lol3
        ) [ClassDeclName]
        ExtendsOptionalDef(
          Type(
           Lol2
          ) [Type]
        ) [ExtendsOptionalDef]
        VarDeclLists(
          VarDeclLists(
            NoVarDeclList(
            ) [NoVarDeclList]
            VarDecl(
              Type(
               int
              ) [Type]
              VarDeclIdent(
               a
                NoAngleBrackets(
                ) [NoAngleBrackets]
              ) [VarDeclIdent]
              NoMoreVarDecls(
              ) [NoMoreVarDecls]
            ) [VarDecl]
          ) [VarDeclLists]
          VarDecl(
            Type(
             int
            ) [Type]
            VarDeclIdent(
             c
              NoAngleBrackets(
              ) [NoAngleBrackets]
            ) [VarDeclIdent]
            MoreVarDeclsDef(
              NoMoreVarDecls(
              ) [NoMoreVarDecls]
              VarDeclIdent(
               d
                NoAngleBrackets(
                ) [NoAngleBrackets]
              ) [VarDeclIdent]
            ) [MoreVarDeclsDef]
          ) [VarDecl]
        ) [VarDeclLists]
        ClassConstrMethodDecOnlyMethod(
          ClassMethodDeclListDef(
            ClassMethodDeclListDef(
              ClassMethodDeclListSingle(
                MethodDecl(
                  MethodTypeName(
                    TypeOrVoidType(
                      Type(
                       a
                      ) [Type]
                    ) [TypeOrVoidType]
                   aa
                  ) [MethodTypeName]
                  FormParsOptionalRPAREN(
                  ) [FormParsOptionalRPAREN]
                  NoVarDeclList(
                  ) [NoVarDeclList]
                  NoStatementList(
                  ) [NoStatementList]
                ) [MethodDecl]
              ) [ClassMethodDeclListSingle]
              MethodDecl(
                MethodTypeName(
                  TypeOrVoidVoid(
                  ) [TypeOrVoidVoid]
                 a
                ) [MethodTypeName]
                FormParsOptionalPars(
                  FormParsWithList(
                    FormParsListWithCOMMA(
                      FormParsIdentNoBrackets(
                        Type(
                         Lol
                        ) [Type]
                       x
                      ) [FormParsIdentNoBrackets]
                    ) [FormParsListWithCOMMA]
                    FormParsListEnd(
                      FormParsEndWithRPAREN(
                        FormParsIdentNoBrackets(
                          Type(
                           int
                          ) [Type]
                         x
                        ) [FormParsIdentNoBrackets]
                      ) [FormParsEndWithRPAREN]
                    ) [FormParsListEnd]
                  ) [FormParsWithList]
                ) [FormParsOptionalPars]
                VarDeclLists(
                  NoVarDeclList(
                  ) [NoVarDeclList]
                  VarDecl(
                    Type(
                     Lol2
                    ) [Type]
                    VarDeclIdent(
                     x
                      NoAngleBrackets(
                      ) [NoAngleBrackets]
                    ) [VarDeclIdent]
                    NoMoreVarDecls(
                    ) [NoMoreVarDecls]
                  ) [VarDecl]
                ) [VarDeclLists]
                StatementListDef(
                  NoStatementList(
                  ) [NoStatementList]
                  PrintStmt(
                    ExprTerm(
                      TermFactor(
                        FactorDesignator(
                          DesignatorIdent(
                           x
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [TermFactor]
                    ) [ExprTerm]
                    NoNumConst(
                    ) [NoNumConst]
                  ) [PrintStmt]
                ) [StatementListDef]
              ) [MethodDecl]
            ) [ClassMethodDeclListDef]
            MethodDecl(
              MethodTypeName(
                TypeOrVoidVoid(
                ) [TypeOrVoidVoid]
               f
              ) [MethodTypeName]
              FormParsOptionalRPAREN(
              ) [FormParsOptionalRPAREN]
              VarDeclLists(
                VarDeclLists(
                  NoVarDeclList(
                  ) [NoVarDeclList]
                  VarDecl(
                    Type(
                     Lol
                    ) [Type]
                    VarDeclIdent(
                     c
                      AngleBrackets(
                      ) [AngleBrackets]
                    ) [VarDeclIdent]
                    NoMoreVarDecls(
                    ) [NoMoreVarDecls]
                  ) [VarDecl]
                ) [VarDeclLists]
                VarDecl(
                  Type(
                   char
                  ) [Type]
                  VarDeclIdent(
                   c2
                    NoAngleBrackets(
                    ) [NoAngleBrackets]
                  ) [VarDeclIdent]
                  NoMoreVarDecls(
                  ) [NoMoreVarDecls]
                ) [VarDecl]
              ) [VarDeclLists]
              StatementListDef(
                StatementListDef(
                  StatementListDef(
                    StatementListDef(
                      StatementListDef(
                        StatementListDef(
                          StatementListDef(
                            StatementListDef(
                              StatementListDef(
                                StatementListDef(
                                  StatementListDef(
                                    StatementListDef(
                                      StatementListDef(
                                        NoStatementList(
                                        ) [NoStatementList]
                                        DesignatorStmt(
                                          DesignatorStmtActPars(
                                            DesignatorForActPars(
                                              DesignatorDotIdent(
                                                DesignatorIdent(
                                                 this
                                                ) [DesignatorIdent]
                                               a
                                              ) [DesignatorDotIdent]
                                            ) [DesignatorForActPars]
                                            NoActParsOpt(
                                            ) [NoActParsOpt]
                                          ) [DesignatorStmtActPars]
                                        ) [DesignatorStmt]
                                      ) [StatementListDef]
                                      DesignatorStmt(
                                        DesignatorStmtOptAssign(
                                          DesignatorIdent(
                                           a
                                          ) [DesignatorIdent]
                                          AssignOp(
                                          ) [AssignOp]
                                          ExprTerm(
                                            TermFactor(
                                              FactorNumber(
                                               1
                                              ) [FactorNumber]
                                            ) [TermFactor]
                                          ) [ExprTerm]
                                        ) [DesignatorStmtOptAssign]
                                      ) [DesignatorStmt]
                                    ) [StatementListDef]
                                    DesignatorStmt(
                                      DesignatorStmtActPars(
                                        DesignatorForActPars(
                                          DesignatorIdent(
                                           ord
                                          ) [DesignatorIdent]
                                        ) [DesignatorForActPars]
                                        ActParsOpt(
                                          ActParsExprOnly(
                                            ExprTerm(
                                              TermFactor(
                                                FactorDesignator(
                                                  DesignatorIdent(
                                                   a
                                                  ) [DesignatorIdent]
                                                ) [FactorDesignator]
                                              ) [TermFactor]
                                            ) [ExprTerm]
                                          ) [ActParsExprOnly]
                                        ) [ActParsOpt]
                                      ) [DesignatorStmtActPars]
                                    ) [DesignatorStmt]
                                  ) [StatementListDef]
                                  DesignatorStmt(
                                    DesignatorStmtOptAssign(
                                      DesignatorIdent(
                                       c2
                                      ) [DesignatorIdent]
                                      AssignOp(
                                      ) [AssignOp]
                                      ExprTerm(
                                        TermFactor(
                                          FactorDesignatorWithParen(
                                            DesignatorForActPars(
                                              DesignatorIdent(
                                               ord
                                              ) [DesignatorIdent]
                                            ) [DesignatorForActPars]
                                            ActParsOpt(
                                              ActParsExprOnly(
                                                ExprTerm(
                                                  TermFactor(
                                                    FactorDesignator(
                                                      DesignatorIdent(
                                                       c2
                                                      ) [DesignatorIdent]
                                                    ) [FactorDesignator]
                                                  ) [TermFactor]
                                                ) [ExprTerm]
                                              ) [ActParsExprOnly]
                                            ) [ActParsOpt]
                                          ) [FactorDesignatorWithParen]
                                        ) [TermFactor]
                                      ) [ExprTerm]
                                    ) [DesignatorStmtOptAssign]
                                  ) [DesignatorStmt]
                                ) [StatementListDef]
                                DesignatorStmt(
                                  DesignatorStmtOptINC(
                                    DesignatorIdent(
                                     a
                                    ) [DesignatorIdent]
                                  ) [DesignatorStmtOptINC]
                                ) [DesignatorStmt]
                              ) [StatementListDef]
                              DesignatorStmt(
                                DesignatorStmtOptDEC(
                                  DesignatorIdent(
                                   a
                                  ) [DesignatorIdent]
                                ) [DesignatorStmtOptDEC]
                              ) [DesignatorStmt]
                            ) [StatementListDef]
                            DesignatorStmt(
                              DesignatorStmtAngleBrackNoDesig(
                                DesignatorCommaListDef(
                                  DesignatorCommaListDef(
                                    DesignatorCommaListDef(
                                      NoDesignatorCommaList(
                                      ) [NoDesignatorCommaList]
                                      DesignatorOpt(
                                        DesignatorIdent(
                                         a
                                        ) [DesignatorIdent]
                                      ) [DesignatorOpt]
                                    ) [DesignatorCommaListDef]
                                    DesignatorOpt(
                                      DesignatorIdent(
                                       b
                                      ) [DesignatorIdent]
                                    ) [DesignatorOpt]
                                  ) [DesignatorCommaListDef]
                                  NoDesignatorOpt(
                                  ) [NoDesignatorOpt]
                                ) [DesignatorCommaListDef]
                                DesignatorIdent(
                                 e
                                ) [DesignatorIdent]
                              ) [DesignatorStmtAngleBrackNoDesig]
                            ) [DesignatorStmt]
                          ) [StatementListDef]
                          DesignatorStmt(
                            DesignatorStmtOptAssign(
                              DesignatorIdent(
                               a
                              ) [DesignatorIdent]
                              AssignOp(
                              ) [AssignOp]
                              ExprPlusTerm(
                                ExprPlusTerm(
                                  ExprTerm(
                                    TermMulFactor(
                                      TermFactor(
                                        FactorDesignator(
                                          DesignatorIdent(
                                           b
                                          ) [DesignatorIdent]
                                        ) [FactorDesignator]
                                      ) [TermFactor]
                                      MulMUL(
                                      ) [MulMUL]
                                      FactorDesignator(
                                        DesignatorIdent(
                                         c
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                    ) [TermMulFactor]
                                  ) [ExprTerm]
                                  AddPLUS(
                                  ) [AddPLUS]
                                  TermFactor(
                                    FactorExpr(
                                      ExprMinusTerm(
                                        TermFactor(
                                          FactorNumber(
                                           1
                                          ) [FactorNumber]
                                        ) [TermFactor]
                                      ) [ExprMinusTerm]
                                    ) [FactorExpr]
                                  ) [TermFactor]
                                ) [ExprPlusTerm]
                                AddMINUS(
                                ) [AddMINUS]
                                TermMulFactor(
                                  TermMulFactor(
                                    TermFactor(
                                      FactorNumber(
                                       2
                                      ) [FactorNumber]
                                    ) [TermFactor]
                                    MulDIV(
                                    ) [MulDIV]
                                    FactorNumber(
                                     4
                                    ) [FactorNumber]
                                  ) [TermMulFactor]
                                  MulMOD(
                                  ) [MulMOD]
                                  FactorDesignator(
                                    DesignatorIdent(
                                     d
                                    ) [DesignatorIdent]
                                  ) [FactorDesignator]
                                ) [TermMulFactor]
                              ) [ExprPlusTerm]
                            ) [DesignatorStmtOptAssign]
                          ) [DesignatorStmt]
                        ) [StatementListDef]
                        DesignatorStmt(
                          DesignatorStmtOptAssign(
                            DesignatorIdent(
                             b
                            ) [DesignatorIdent]
                            AssignOp(
                            ) [AssignOp]
                            ExprTerm(
                              TermFactor(
                                FactorNewActPars(
                                  Type(
                                   Lol
                                  ) [Type]
                                  ActParsOpt(
                                    ActParsExprList(
                                      ActParsExprList(
                                        ActParsExprOnly(
                                          ExprTerm(
                                            TermFactor(
                                              FactorNumber(
                                               1
                                              ) [FactorNumber]
                                            ) [TermFactor]
                                          ) [ExprTerm]
                                        ) [ActParsExprOnly]
                                        ExprTerm(
                                          TermFactor(
                                            FactorDesignatorWithParen(
                                              DesignatorForActPars(
                                                DesignatorIdent(
                                                 f
                                                ) [DesignatorIdent]
                                              ) [DesignatorForActPars]
                                              NoActParsOpt(
                                              ) [NoActParsOpt]
                                            ) [FactorDesignatorWithParen]
                                          ) [TermFactor]
                                        ) [ExprTerm]
                                      ) [ActParsExprList]
                                      ExprTerm(
                                        TermFactor(
                                          FactorNumber(
                                           2
                                          ) [FactorNumber]
                                        ) [TermFactor]
                                      ) [ExprTerm]
                                    ) [ActParsExprList]
                                  ) [ActParsOpt]
                                ) [FactorNewActPars]
                              ) [TermFactor]
                            ) [ExprTerm]
                          ) [DesignatorStmtOptAssign]
                        ) [DesignatorStmt]
                      ) [StatementListDef]
                      DesignatorStmt(
                        DesignatorStmtOptAssign(
                          DesignatorIdent(
                           c
                          ) [DesignatorIdent]
                          AssignOp(
                          ) [AssignOp]
                          ExprTerm(
                            TermFactor(
                              FactorNewExpr(
                                Type(
                                 Lol2
                                ) [Type]
                                ExprTerm(
                                  TermFactor(
                                    FactorDesignator(
                                      DesignatorIdent(
                                       a
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                  ) [TermFactor]
                                ) [ExprTerm]
                              ) [FactorNewExpr]
                            ) [TermFactor]
                          ) [ExprTerm]
                        ) [DesignatorStmtOptAssign]
                      ) [DesignatorStmt]
                    ) [StatementListDef]
                    DesignatorStmt(
                      DesignatorStmtOptAssign(
                        DesignatorIdent(
                         c
                        ) [DesignatorIdent]
                        AssignOp(
                        ) [AssignOp]
                        ExprTerm(
                          TermFactor(
                            FactorNewExpr(
                              Type(
                               Lol2
                              ) [Type]
                              ExprTerm(
                                TermFactor(
                                  FactorDesignator(
                                    DesignatorIdent(
                                     c2
                                    ) [DesignatorIdent]
                                  ) [FactorDesignator]
                                ) [TermFactor]
                              ) [ExprTerm]
                            ) [FactorNewExpr]
                          ) [TermFactor]
                        ) [ExprTerm]
                      ) [DesignatorStmtOptAssign]
                    ) [DesignatorStmt]
                  ) [StatementListDef]
                  DesignatorStmt(
                    DesignatorStmtOptAssign(
                      DesignatorIdent(
                       a
                      ) [DesignatorIdent]
                      AssignOp(
                      ) [AssignOp]
                      ExprTerm(
                        TermFactor(
                          FactorNewActPars(
                            Type(
                             int
                            ) [Type]
                            NoActParsOpt(
                            ) [NoActParsOpt]
                          ) [FactorNewActPars]
                        ) [TermFactor]
                      ) [ExprTerm]
                    ) [DesignatorStmtOptAssign]
                  ) [DesignatorStmt]
                ) [StatementListDef]
                IfStmt(
                  Condition(
                    CondTerm(
                      CondFactExpr(
                        ExprTerm(
                          TermFactor(
                            FactorDesignator(
                              DesignatorIdent(
                               a
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [TermFactor]
                        ) [ExprTerm]
                      ) [CondFactExpr]
                      NoCondFactList(
                      ) [NoCondFactList]
                    ) [CondTerm]
                    NoCondTermList(
                    ) [NoCondTermList]
                  ) [Condition]
                  StmtList(
                    StatementListDef(
                      StatementListDef(
                        NoStatementList(
                        ) [NoStatementList]
                        IfStmt(
                          Condition(
                            CondTerm(
                              CondFactExpr(
                                ExprTerm(
                                  TermFactor(
                                    FactorDesignator(
                                      DesignatorIdent(
                                       g
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                  ) [TermFactor]
                                ) [ExprTerm]
                              ) [CondFactExpr]
                              NoCondFactList(
                              ) [NoCondFactList]
                            ) [CondTerm]
                            CondTermListDef(
                              NoCondTermList(
                              ) [NoCondTermList]
                              CondTerm(
                                CondFactExpr(
                                  ExprTerm(
                                    TermFactor(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         a
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                    ) [TermFactor]
                                  ) [ExprTerm]
                                ) [CondFactExpr]
                                CondFactListDef(
                                  NoCondFactList(
                                  ) [NoCondFactList]
                                  CondFactExprRelOpExpr(
                                    ExprTerm(
                                      TermFactor(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorIdent(
                                             c
                                            ) [DesignatorIdent]
                                            ExprTerm(
                                              TermFactor(
                                                FactorNumber(
                                                 0
                                                ) [FactorNumber]
                                              ) [TermFactor]
                                            ) [ExprTerm]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                      ) [TermFactor]
                                    ) [ExprTerm]
                                    RelLT(
                                    ) [RelLT]
                                    ExprTerm(
                                      TermFactor(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorIdent(
                                             c
                                            ) [DesignatorIdent]
                                            ExprTerm(
                                              TermFactor(
                                                FactorNumber(
                                                 1
                                                ) [FactorNumber]
                                              ) [TermFactor]
                                            ) [ExprTerm]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                      ) [TermFactor]
                                    ) [ExprTerm]
                                  ) [CondFactExprRelOpExpr]
                                ) [CondFactListDef]
                              ) [CondTerm]
                            ) [CondTermListDef]
                          ) [Condition]
                          StmtList(
                            NoStatementList(
                            ) [NoStatementList]
                          ) [StmtList]
                          ElseStmtEpsilon(
                          ) [ElseStmtEpsilon]
                        ) [IfStmt]
                      ) [StatementListDef]
                      BreakStmt(
                      ) [BreakStmt]
                    ) [StatementListDef]
                  ) [StmtList]
                  ElseStmtEpsilon(
                  ) [ElseStmtEpsilon]
                ) [IfStmt]
              ) [StatementListDef]
            ) [MethodDecl]
          ) [ClassMethodDeclListDef]
        ) [ClassConstrMethodDecOnlyMethod]
      ) [ClassDecl]
    ) [DeclsClassDecl]
  ) [Declarations]
  MethodDeclLists(
    MethodDeclLists(
      NoMethodDeclList(
      ) [NoMethodDeclList]
      MethodDecl(
        MethodTypeName(
          TypeOrVoidVoid(
          ) [TypeOrVoidVoid]
         lol
        ) [MethodTypeName]
        FormParsOptionalRPAREN(
        ) [FormParsOptionalRPAREN]
        NoVarDeclList(
        ) [NoVarDeclList]
        NoStatementList(
        ) [NoStatementList]
      ) [MethodDecl]
    ) [MethodDeclLists]
    MethodDecl(
      MethodTypeName(
        TypeOrVoidType(
          Type(
           Lol
          ) [Type]
        ) [TypeOrVoidType]
       lol2
      ) [MethodTypeName]
      FormParsOptionalPars(
        FormParsListEnd(
          FormParsEndWithRPAREN(
            FormParsIdentNoBrackets(
              Type(
               int
              ) [Type]
             a
            ) [FormParsIdentNoBrackets]
          ) [FormParsEndWithRPAREN]
        ) [FormParsListEnd]
      ) [FormParsOptionalPars]
      VarDeclLists(
        NoVarDeclList(
        ) [NoVarDeclList]
        VarDecl(
          Type(
           int
          ) [Type]
          VarDeclIdent(
           b
            NoAngleBrackets(
            ) [NoAngleBrackets]
          ) [VarDeclIdent]
          MoreVarDeclsDef(
            NoMoreVarDecls(
            ) [NoMoreVarDecls]
            VarDeclIdent(
             c
              AngleBrackets(
              ) [AngleBrackets]
            ) [VarDeclIdent]
          ) [MoreVarDeclsDef]
        ) [VarDecl]
      ) [VarDeclLists]
      NoStatementList(
      ) [NoStatementList]
    ) [MethodDecl]
  ) [MethodDeclLists]
) [Program]
INFO  21:58:53,319 - ===================================
ERROR 21:58:53,322 - Greska na 5 :Ime konstante b je vec deklarisano u ovom opsegu - constsListElem
ERROR 21:58:53,322 - Greska na 12: Metoda sa imenom ord je vec deklarisana
INFO  21:58:53,322 - Obradjuje se funkcija ord na liniji 12
ERROR 21:58:53,322 - Greska na liniji 13 : tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije noObj
ERROR 21:58:53,322 - Nije pronadjen tip Lol3 u tabeli simbola!
ERROR 21:58:53,322 - Greska - izvodi se iz nepostojece klase! na liniji 20
INFO  21:58:53,322 - Obradjuje se funkcija bb na liniji 23
ERROR 21:58:53,322 - Greska na liniji 24 : tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije bb
ERROR 21:58:53,322 - Greska: Ime a ne predstavlja tip! na liniji 32
INFO  21:58:53,322 - Obradjuje se funkcija aa na liniji 32
ERROR 21:58:53,322 - Greska na 33: Metoda sa imenom a je vec deklarisana
INFO  21:58:53,322 - Obradjuje se funkcija a na liniji 33
ERROR 21:58:53,322 - Greska - Vec je deklarisan formalni parametar sa imenom x na liniji 33
ERROR 21:58:53,322 - Greska na 33 :Ime localne promenljive x je vec deklarisano u ovom opsegu - globalVar
INFO  21:58:53,322 - Pronadjena lokalna varijabla! - x na liniji 34
ERROR 21:58:53,322 - Expr u printu mora da bude tipa int, char ili bool! na liniji 34
INFO  21:58:53,323 - Obradjuje se funkcija f na liniji 36
INFO  21:58:53,323 - Pronadjena lokalna varijabla! - this na liniji 37
ERROR 21:58:53,323 - Greska na 37 : a ne postoji kao polje ili metoda klase!
ERROR 21:58:53,323 - Greska - Designator mora biti metoda! - DStmtActPars na liniji 37
ERROR 21:58:53,323 - Greska - Stvarni argument nije istog tipa kao formalni! - actParsOpt na liniji 39
INFO  21:58:53,323 - Poziv funkcije ord! na liniji 39
ERROR 21:58:53,323 - Greska - izraz ne moze da se dodeli zbog nepoklapanja tipova! - desigAssign na liniji 40
INFO  21:58:53,323 - Pronadjena konstanta! - b na liniji 43
INFO  21:58:53,323 - Pronadjena globalna varijabla! - e na liniji 43
INFO  21:58:53,323 - Pronadjena konstanta! - b na liniji 44
ERROR 21:58:53,323 - Greska na 44 : Moguce je mnozenje/deljenje/moduo samo int tipova! - termMulFactor
ERROR 21:58:53,323 - Greska na 44 : Moguce je sabirati/oduzimati samo tipove int! - exprPlusTerm
ERROR 21:58:53,323 - Greska na 44 : Moguce je sabirati/oduzimati samo tipove int! - exprPlusTerm
ERROR 21:58:53,323 - Greska - izraz ne moze da se dodeli zbog nepoklapanja tipova! - desigAssign na liniji 44
INFO  21:58:53,323 - Pronadjena konstanta! - b na liniji 45
ERROR 21:58:53,323 - Greska - Broj stvarnih i formalnih parametara nije isti! - actParsOpt na liniji 45
ERROR 21:58:53,323 - Greska - pogresan podatak pri dodeli vrednosti! - desigAssign na liniji 45
ERROR 21:58:53,324 - Greska - tip mora biti int! - factorNewExpr na liniji 47
ERROR 21:58:53,324 - Greska - izraz ne moze da se dodeli zbog nepoklapanja tipova! - desigAssign na liniji 47
ERROR 21:58:53,324 - Greska - tip mora biti klasni! - factorNewActPars na liniji 48
ERROR 21:58:53,324 - Greska - izraz ne moze da se dodeli zbog nepoklapanja tipova! - desigAssign na liniji 48
ERROR 21:58:53,324 - Greska na 49 :Expr u uslovu mora biti bool tipa! - CondFact
ERROR 21:58:53,324 - Uslov mora biti bool tipa! na liniji 49
INFO  21:58:53,324 - Pronadjena konstanta! - g na liniji 50
ERROR 21:58:53,324 - Greska na 50 :Expr u uslovu mora biti bool tipa! - CondFact
INFO  21:58:53,324 - Pristup elementu niza - c na liniji 50
INFO  21:58:53,324 - Pristup elementu niza - c na liniji 50
ERROR 21:58:53,324 - Greska na 50 : Kod klasa ili niza moze se koristiti samo == ili != - CondFact
ERROR 21:58:53,324 - Uslov mora biti bool tipa! na liniji 50
ERROR 21:58:53,324 - Greska - Break moze samo unutar petlje!
INFO  21:58:53,324 - Obradjuje se funkcija lol na liniji 58
INFO  21:58:53,324 - Obradjuje se funkcija lol2 na liniji 59
ERROR 21:58:53,324 - Semanticka greska na liniji 59: funkcija lol2 nema return iskaz!
ERROR 21:58:53,324 - Greska: main metoda ne postoji!
INFO  21:58:53,325 -  Print count calls = 1
INFO  21:58:53,325 -  Lokalno deklarisanih promenljivih ima = 11
INFO  21:58:53,325 - ===================================
ERROR 21:58:53,325 - Parsiranje NIJE uspesno zavrseno.
